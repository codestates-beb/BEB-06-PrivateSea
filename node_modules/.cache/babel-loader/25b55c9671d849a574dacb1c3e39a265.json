{"ast":null,"code":"var _jsxFileName = \"/Users/hyunsuk/Desktop/BEB-06-PrivateSea/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Routes, BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Nav from \"./Nav\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //get 요청을 한다.\n  //값을 받아온다. => url\n  const [searchValue, setSearchValue] = useState(undefined);\n  const [nftUrl, setNftUrl] = useState(\"\");\n\n  //search\n  function handleSearch(e) {\n    setSearchValue(e.target.value);\n    axios.get(`http://localhost:8080/nft/${searchValue}`).then(result => {\n      //axios({method:get , url:'/nft/${search}'})\n    });\n  }\n  useEffect(() => {\n    getUrl();\n  }, []);\n\n  //처음에 main 에 뿌려주는 Nft list 를 db에 초기값 셋팅하기 위함\n  async function getUrl() {\n    await axios.post(\"http://localhost:8080/\", {\n      data: {\n        url: \"https://pin.it/1MaWAk8\"\n      }\n    }, {\n      withCredentials: true\n    }).then(result => {\n      setNftUrl(result);\n      console.log(nftUrl);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Nav, {\n      value: searchValue,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"g7RlCOU1Pio0u6ljIGJJVubOlNs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Routes","BrowserRouter","Router","Route","Nav","axios","App","searchValue","setSearchValue","undefined","nftUrl","setNftUrl","handleSearch","e","target","value","get","then","result","getUrl","post","data","url","withCredentials","console","log"],"sources":["/Users/hyunsuk/Desktop/BEB-06-PrivateSea/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Routes, BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Nav from \"./Nav\";\nimport axios from \"axios\";\n\nfunction App() {\n  //get 요청을 한다.\n  //값을 받아온다. => url\n  const [searchValue, setSearchValue] = useState(undefined);\n  const [nftUrl, setNftUrl] = useState(\"\");\n\n  //search\n  function handleSearch(e) {\n    setSearchValue(e.target.value);\n    axios.get(`http://localhost:8080/nft/${searchValue}`).then((result) => {\n      //axios({method:get , url:'/nft/${search}'})\n    });\n  }\n\n  useEffect(() => {\n    getUrl();\n  }, []);\n\n  //처음에 main 에 뿌려주는 Nft list 를 db에 초기값 셋팅하기 위함\n  async function getUrl() {\n    await axios\n      .post(\n        \"http://localhost:8080/\",\n        { data: { url: \"https://pin.it/1MaWAk8\" } },\n        { withCredentials: true }\n      )\n      .then((result) => {\n        setNftUrl(result);\n        console.log(nftUrl);\n      });\n  }\n\n  return (\n    <div>\n      <Nav value={searchValue} onChange={handleSearch} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,aAAa,IAAIC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAO,WAAW;AAClB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,GAAG,GAAG;EAAA;EACb;EACA;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAACU,SAAS,CAAC;EACzD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,SAASa,YAAY,CAACC,CAAC,EAAE;IACvBL,cAAc,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC9BV,KAAK,CAACW,GAAG,CAAE,6BAA4BT,WAAY,EAAC,CAAC,CAACU,IAAI,CAAEC,MAAM,IAAK;MACrE;IACF,CAAC,CAAC;EACJ;EAEApB,SAAS,CAAC,MAAM;IACdqB,MAAM,EAAE;EACV,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,eAAeA,MAAM,GAAG;IACtB,MAAMd,KAAK,CACRe,IAAI,CACH,wBAAwB,EACxB;MAAEC,IAAI,EAAE;QAAEC,GAAG,EAAE;MAAyB;IAAE,CAAC,EAC3C;MAAEC,eAAe,EAAE;IAAK,CAAC,CAC1B,CACAN,IAAI,CAAEC,MAAM,IAAK;MAChBP,SAAS,CAACO,MAAM,CAAC;MACjBM,OAAO,CAACC,GAAG,CAACf,MAAM,CAAC;IACrB,CAAC,CAAC;EACN;EAEA,oBACE;IAAA,uBACE,QAAC,GAAG;MAAC,KAAK,EAAEH,WAAY;MAAC,QAAQ,EAAEK;IAAa;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAC/C;AAEV;AAAC,GArCQN,GAAG;AAAA,KAAHA,GAAG;AAuCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
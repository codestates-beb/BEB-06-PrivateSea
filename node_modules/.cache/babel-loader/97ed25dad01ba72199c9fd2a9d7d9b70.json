{"ast":null,"code":"import _createForOfIteratorHelper from\"/home/leejungwon/BEB-06-PrivateSea/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _regeneratorRuntime from\"/home/leejungwon/BEB-06-PrivateSea/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/leejungwon/BEB-06-PrivateSea/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _defineProperty from\"/home/leejungwon/BEB-06-PrivateSea/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _createClass from\"/home/leejungwon/BEB-06-PrivateSea/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _classCallCheck from\"/home/leejungwon/BEB-06-PrivateSea/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _inherits from\"/home/leejungwon/BEB-06-PrivateSea/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/leejungwon/BEB-06-PrivateSea/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import _wrapNativeSuper from\"/home/leejungwon/BEB-06-PrivateSea/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";import _slicedToArray from\"/home/leejungwon/BEB-06-PrivateSea/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"/home/leejungwon/BEB-06-PrivateSea/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";/**\n * @remix-run/router v1.0.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */var Action;(function(Action){/**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */Action[\"Pop\"]=\"POP\";/**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */Action[\"Push\"]=\"PUSH\";/**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */Action[\"Replace\"]=\"REPLACE\";})(Action||(Action={}));var PopStateEventType=\"popstate\";/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */function createMemoryHistory(options){if(options===void 0){options={};}var _options=options,_options$initialEntri=_options.initialEntries,initialEntries=_options$initialEntri===void 0?[\"/\"]:_options$initialEntri,initialIndex=_options.initialIndex,_options$v5Compat=_options.v5Compat,v5Compat=_options$v5Compat===void 0?false:_options$v5Compat;var entries;// Declare so we can access from createMemoryLocation\nentries=initialEntries.map(function(entry,index){return createMemoryLocation(entry,typeof entry===\"string\"?null:entry.state,index===0?\"default\":undefined);});var index=clampIndex(initialIndex==null?entries.length-1:initialIndex);var action=Action.Pop;var listener=null;function clampIndex(n){return Math.min(Math.max(n,0),entries.length-1);}function getCurrentLocation(){return entries[index];}function createMemoryLocation(to,state,key){if(state===void 0){state=null;}var location=createLocation(entries?getCurrentLocation().pathname:\"/\",to,state,key);warning$1(location.pathname.charAt(0)===\"/\",\"relative pathnames are not supported in memory history: \"+JSON.stringify(to));return location;}var history={get index(){return index;},get action(){return action;},get location(){return getCurrentLocation();},createHref:function createHref(to){return typeof to===\"string\"?to:createPath(to);},push:function push(to,state){action=Action.Push;var nextLocation=createMemoryLocation(to,state);index+=1;entries.splice(index,entries.length,nextLocation);if(v5Compat&&listener){listener({action:action,location:nextLocation});}},replace:function replace(to,state){action=Action.Replace;var nextLocation=createMemoryLocation(to,state);entries[index]=nextLocation;if(v5Compat&&listener){listener({action:action,location:nextLocation});}},go:function go(delta){action=Action.Pop;index=clampIndex(index+delta);if(listener){listener({action:action,location:getCurrentLocation()});}},listen:function listen(fn){listener=fn;return function(){listener=null;};}};return history;}/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */function createBrowserHistory(options){if(options===void 0){options={};}function createBrowserLocation(window,globalHistory){var _window$location=window.location,pathname=_window$location.pathname,search=_window$location.search,hash=_window$location.hash;return createLocation(\"\",{pathname:pathname,search:search,hash:hash},// state defaults to `null` because `window.history.state` does\nglobalHistory.state&&globalHistory.state.usr||null,globalHistory.state&&globalHistory.state.key||\"default\");}function createBrowserHref(window,to){return typeof to===\"string\"?to:createPath(to);}return getUrlBasedHistory(createBrowserLocation,createBrowserHref,null,options);}/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */function createHashHistory(options){if(options===void 0){options={};}function createHashLocation(window,globalHistory){var _parsePath=parsePath(window.location.hash.substr(1)),_parsePath$pathname=_parsePath.pathname,pathname=_parsePath$pathname===void 0?\"/\":_parsePath$pathname,_parsePath$search=_parsePath.search,search=_parsePath$search===void 0?\"\":_parsePath$search,_parsePath$hash=_parsePath.hash,hash=_parsePath$hash===void 0?\"\":_parsePath$hash;return createLocation(\"\",{pathname:pathname,search:search,hash:hash},// state defaults to `null` because `window.history.state` does\nglobalHistory.state&&globalHistory.state.usr||null,globalHistory.state&&globalHistory.state.key||\"default\");}function createHashHref(window,to){var base=window.document.querySelector(\"base\");var href=\"\";if(base&&base.getAttribute(\"href\")){var url=window.location.href;var hashIndex=url.indexOf(\"#\");href=hashIndex===-1?url:url.slice(0,hashIndex);}return href+\"#\"+(typeof to===\"string\"?to:createPath(to));}function validateHashLocation(location,to){warning$1(location.pathname.charAt(0)===\"/\",\"relative pathnames are not supported in hash history.push(\"+JSON.stringify(to)+\")\");}return getUrlBasedHistory(createHashLocation,createHashHref,validateHashLocation,options);}//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\nfunction warning$1(cond,message){if(!cond){// eslint-disable-next-line no-console\nif(typeof console!==\"undefined\")console.warn(message);try{// Welcome to debugging history!\n//\n// This error is thrown as a convenience so you can more easily\n// find the source for a warning that appears in the console by\n// enabling \"pause on exceptions\" in your JavaScript debugger.\nthrow new Error(message);// eslint-disable-next-line no-empty\n}catch(e){}}}function createKey(){return Math.random().toString(36).substr(2,8);}/**\n * For browser-based histories, we combine the state and key into an object\n */function getHistoryState(location){return{usr:location.state,key:location.key};}/**\n * Creates a Location object with a unique key from the given Path\n */function createLocation(current,to,state,key){if(state===void 0){state=null;}var location=_extends({pathname:typeof current===\"string\"?current:current.pathname,search:\"\",hash:\"\"},typeof to===\"string\"?parsePath(to):to,{state:state,// TODO: This could be cleaned up.  push/replace should probably just take\n// full Locations now and avoid the need to run through this flow at all\n// But that's a pretty big refactor to the current test suite so going to\n// keep as is for the time being and just let any incoming keys take precedence\nkey:to&&to.key||key||createKey()});return location;}/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */function createPath(_ref){var _ref$pathname=_ref.pathname,pathname=_ref$pathname===void 0?\"/\":_ref$pathname,_ref$search=_ref.search,search=_ref$search===void 0?\"\":_ref$search,_ref$hash=_ref.hash,hash=_ref$hash===void 0?\"\":_ref$hash;if(search&&search!==\"?\")pathname+=search.charAt(0)===\"?\"?search:\"?\"+search;if(hash&&hash!==\"#\")pathname+=hash.charAt(0)===\"#\"?hash:\"#\"+hash;return pathname;}/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */function parsePath(path){var parsedPath={};if(path){var hashIndex=path.indexOf(\"#\");if(hashIndex>=0){parsedPath.hash=path.substr(hashIndex);path=path.substr(0,hashIndex);}var searchIndex=path.indexOf(\"?\");if(searchIndex>=0){parsedPath.search=path.substr(searchIndex);path=path.substr(0,searchIndex);}if(path){parsedPath.pathname=path;}}return parsedPath;}function getUrlBasedHistory(getLocation,_createHref,validateLocation,options){if(options===void 0){options={};}var _options2=options,_options2$window=_options2.window,window=_options2$window===void 0?document.defaultView:_options2$window,_options2$v5Compat=_options2.v5Compat,v5Compat=_options2$v5Compat===void 0?false:_options2$v5Compat;var globalHistory=window.history;var action=Action.Pop;var listener=null;function handlePop(){action=Action.Pop;if(listener){listener({action:action,location:history.location});}}function push(to,state){action=Action.Push;var location=createLocation(history.location,to,state);if(validateLocation)validateLocation(location,to);var historyState=getHistoryState(location);var url=history.createHref(location);// try...catch because iOS limits us to 100 pushState calls :/\ntry{globalHistory.pushState(historyState,\"\",url);}catch(error){// They are going to lose state here, but there is no real\n// way to warn them about it since the page will refresh...\nwindow.location.assign(url);}if(v5Compat&&listener){listener({action:action,location:location});}}function replace(to,state){action=Action.Replace;var location=createLocation(history.location,to,state);if(validateLocation)validateLocation(location,to);var historyState=getHistoryState(location);var url=history.createHref(location);globalHistory.replaceState(historyState,\"\",url);if(v5Compat&&listener){listener({action:action,location:location});}}var history={get action(){return action;},get location(){return getLocation(window,globalHistory);},listen:function listen(fn){if(listener){throw new Error(\"A history only accepts one active listener\");}window.addEventListener(PopStateEventType,handlePop);listener=fn;return function(){window.removeEventListener(PopStateEventType,handlePop);listener=null;};},createHref:function createHref(to){return _createHref(window,to);},push:push,replace:replace,go:function go(n){return globalHistory.go(n);}};return history;}//#endregion\nvar ResultType;(function(ResultType){ResultType[\"data\"]=\"data\";ResultType[\"deferred\"]=\"deferred\";ResultType[\"redirect\"]=\"redirect\";ResultType[\"error\"]=\"error\";})(ResultType||(ResultType={}));function isIndexRoute(route){return route.index===true;}// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes,parentPath,allIds){if(parentPath===void 0){parentPath=[];}if(allIds===void 0){allIds=new Set();}return routes.map(function(route,index){var treePath=[].concat(_toConsumableArray(parentPath),[index]);var id=typeof route.id===\"string\"?route.id:treePath.join(\"-\");invariant(route.index!==true||!route.children,\"Cannot specify children on an index route\");invariant(!allIds.has(id),\"Found a route id collision on id \\\"\"+id+\"\\\".  Route \"+\"id's must be globally unique within Data Router usages\");allIds.add(id);if(isIndexRoute(route)){var indexRoute=_extends({},route,{id:id});return indexRoute;}else{var pathOrLayoutRoute=_extends({},route,{id:id,children:route.children?convertRoutesToDataRoutes(route.children,treePath,allIds):undefined});return pathOrLayoutRoute;}});}/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/match-routes\n */function matchRoutes(routes,locationArg,basename){if(basename===void 0){basename=\"/\";}var location=typeof locationArg===\"string\"?parsePath(locationArg):locationArg;var pathname=stripBasename(location.pathname||\"/\",basename);if(pathname==null){return null;}var branches=flattenRoutes(routes);rankRouteBranches(branches);var matches=null;for(var i=0;matches==null&&i<branches.length;++i){matches=matchRouteBranch(branches[i],pathname);}return matches;}function flattenRoutes(routes,branches,parentsMeta,parentPath){if(branches===void 0){branches=[];}if(parentsMeta===void 0){parentsMeta=[];}if(parentPath===void 0){parentPath=\"\";}routes.forEach(function(route,index){var meta={relativePath:route.path||\"\",caseSensitive:route.caseSensitive===true,childrenIndex:index,route:route};if(meta.relativePath.startsWith(\"/\")){invariant(meta.relativePath.startsWith(parentPath),\"Absolute route path \\\"\"+meta.relativePath+\"\\\" nested under path \"+(\"\\\"\"+parentPath+\"\\\" is not valid. An absolute child route path \")+\"must start with the combined path of all its parent routes.\");meta.relativePath=meta.relativePath.slice(parentPath.length);}var path=joinPaths([parentPath,meta.relativePath]);var routesMeta=parentsMeta.concat(meta);// Add the children before adding this route to the array so we traverse the\n// route tree depth-first and child routes appear before their parents in\n// the \"flattened\" version.\nif(route.children&&route.children.length>0){invariant(// Our types know better, but runtime JS may not!\n// @ts-expect-error\nroute.index!==true,\"Index routes must not have child routes. Please remove \"+(\"all child routes from route path \\\"\"+path+\"\\\".\"));flattenRoutes(route.children,branches,routesMeta,path);}// Routes without a path shouldn't ever match by themselves unless they are\n// index routes, so don't add them to the list of possible branches.\nif(route.path==null&&!route.index){return;}branches.push({path:path,score:computeScore(path,route.index),routesMeta:routesMeta});});return branches;}function rankRouteBranches(branches){branches.sort(function(a,b){return a.score!==b.score?b.score-a.score// Higher score first\n:compareIndexes(a.routesMeta.map(function(meta){return meta.childrenIndex;}),b.routesMeta.map(function(meta){return meta.childrenIndex;}));});}var paramRe=/^:\\w+$/;var dynamicSegmentValue=3;var indexRouteValue=2;var emptySegmentValue=1;var staticSegmentValue=10;var splatPenalty=-2;var isSplat=function isSplat(s){return s===\"*\";};function computeScore(path,index){var segments=path.split(\"/\");var initialScore=segments.length;if(segments.some(isSplat)){initialScore+=splatPenalty;}if(index){initialScore+=indexRouteValue;}return segments.filter(function(s){return!isSplat(s);}).reduce(function(score,segment){return score+(paramRe.test(segment)?dynamicSegmentValue:segment===\"\"?emptySegmentValue:staticSegmentValue);},initialScore);}function compareIndexes(a,b){var siblings=a.length===b.length&&a.slice(0,-1).every(function(n,i){return n===b[i];});return siblings?// If two routes are siblings, we should try to match the earlier sibling\n// first. This allows people to have fine-grained control over the matching\n// behavior by simply putting routes with identical paths in the order they\n// want them tried.\na[a.length-1]-b[b.length-1]:// Otherwise, it doesn't really make sense to rank non-siblings by index,\n// so they sort equally.\n0;}function matchRouteBranch(branch,pathname){var routesMeta=branch.routesMeta;var matchedParams={};var matchedPathname=\"/\";var matches=[];for(var i=0;i<routesMeta.length;++i){var meta=routesMeta[i];var end=i===routesMeta.length-1;var remainingPathname=matchedPathname===\"/\"?pathname:pathname.slice(matchedPathname.length)||\"/\";var match=matchPath({path:meta.relativePath,caseSensitive:meta.caseSensitive,end:end},remainingPathname);if(!match)return null;Object.assign(matchedParams,match.params);var route=meta.route;matches.push({// TODO: Can this as be avoided?\nparams:matchedParams,pathname:joinPaths([matchedPathname,match.pathname]),pathnameBase:normalizePathname(joinPaths([matchedPathname,match.pathnameBase])),route:route});if(match.pathnameBase!==\"/\"){matchedPathname=joinPaths([matchedPathname,match.pathnameBase]);}}return matches;}/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/generate-path\n */function generatePath(path,params){if(params===void 0){params={};}return path.replace(/:(\\w+)/g,function(_,key){invariant(params[key]!=null,\"Missing \\\":\"+key+\"\\\" param\");return params[key];}).replace(/(\\/?)\\*/,function(_,prefix,__,str){var star=\"*\";if(params[star]==null){// If no splat was provided, trim the trailing slash _unless_ it's\n// the entire path\nreturn str===\"/*\"?\"/\":\"\";}// Apply the splat\nreturn\"\"+prefix+params[star];});}/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/match-path\n */function matchPath(pattern,pathname){if(typeof pattern===\"string\"){pattern={path:pattern,caseSensitive:false,end:true};}var _compilePath=compilePath(pattern.path,pattern.caseSensitive,pattern.end),_compilePath2=_slicedToArray(_compilePath,2),matcher=_compilePath2[0],paramNames=_compilePath2[1];var match=pathname.match(matcher);if(!match)return null;var matchedPathname=match[0];var pathnameBase=matchedPathname.replace(/(.)\\/+$/,\"$1\");var captureGroups=match.slice(1);var params=paramNames.reduce(function(memo,paramName,index){// We need to compute the pathnameBase here using the raw splat value\n// instead of using params[\"*\"] later because it will be decoded then\nif(paramName===\"*\"){var splatValue=captureGroups[index]||\"\";pathnameBase=matchedPathname.slice(0,matchedPathname.length-splatValue.length).replace(/(.)\\/+$/,\"$1\");}memo[paramName]=safelyDecodeURIComponent(captureGroups[index]||\"\",paramName);return memo;},{});return{params:params,pathname:matchedPathname,pathnameBase:pathnameBase,pattern:pattern};}function compilePath(path,caseSensitive,end){if(caseSensitive===void 0){caseSensitive=false;}if(end===void 0){end=true;}warning(path===\"*\"||!path.endsWith(\"*\")||path.endsWith(\"/*\"),\"Route path \\\"\"+path+\"\\\" will be treated as if it were \"+(\"\\\"\"+path.replace(/\\*$/,\"/*\")+\"\\\" because the `*` character must \")+\"always follow a `/` in the pattern. To get rid of this warning, \"+(\"please change the route path to \\\"\"+path.replace(/\\*$/,\"/*\")+\"\\\".\"));var paramNames=[];var regexpSource=\"^\"+path.replace(/\\/*\\*?$/,\"\")// Ignore trailing / and /*, we'll handle it below\n.replace(/^\\/*/,\"/\")// Make sure it has a leading /\n.replace(/[\\\\.*+^$?{}|()[\\]]/g,\"\\\\$&\")// Escape special regex chars\n.replace(/:(\\w+)/g,function(_,paramName){paramNames.push(paramName);return\"([^\\\\/]+)\";});if(path.endsWith(\"*\")){paramNames.push(\"*\");regexpSource+=path===\"*\"||path===\"/*\"?\"(.*)$\"// Already matched the initial /, just match the rest\n:\"(?:\\\\/(.+)|\\\\/*)$\";// Don't include the / in params[\"*\"]\n}else if(end){// When matching to the end, ignore trailing slashes\nregexpSource+=\"\\\\/*$\";}else if(path!==\"\"&&path!==\"/\"){// If our path is non-empty and contains anything beyond an initial slash,\n// then we have _some_ form of path in our regex so we should expect to\n// match only if we find the end of this path segment.  Look for an optional\n// non-captured trailing slash (to match a portion of the URL) or the end\n// of the path (if we've matched to the end).  We used to do this with a\n// word boundary but that gives false positives on routes like\n// /user-preferences since `-` counts as a word boundary.\nregexpSource+=\"(?:(?=\\\\/|$))\";}else;var matcher=new RegExp(regexpSource,caseSensitive?undefined:\"i\");return[matcher,paramNames];}function safelyDecodeURIComponent(value,paramName){try{return decodeURIComponent(value);}catch(error){warning(false,\"The value for the URL param \\\"\"+paramName+\"\\\" will not be decoded because\"+(\" the string \\\"\"+value+\"\\\" is a malformed URL segment. This is probably\")+(\" due to a bad percent encoding (\"+error+\").\"));return value;}}/**\n * @private\n */function stripBasename(pathname,basename){if(basename===\"/\")return pathname;if(!pathname.toLowerCase().startsWith(basename.toLowerCase())){return null;}// We want to leave trailing slash behavior in the user's control, so if they\n// specify a basename with a trailing slash, we should support it\nvar startIndex=basename.endsWith(\"/\")?basename.length-1:basename.length;var nextChar=pathname.charAt(startIndex);if(nextChar&&nextChar!==\"/\"){// pathname does not start with basename/\nreturn null;}return pathname.slice(startIndex)||\"/\";}function invariant(value,message){if(value===false||value===null||typeof value===\"undefined\"){throw new Error(message);}}/**\n * @private\n */function warning(cond,message){if(!cond){// eslint-disable-next-line no-console\nif(typeof console!==\"undefined\")console.warn(message);try{// Welcome to debugging React Router!\n//\n// This error is thrown as a convenience so you can more easily\n// find the source for a warning that appears in the console by\n// enabling \"pause on exceptions\" in your JavaScript debugger.\nthrow new Error(message);// eslint-disable-next-line no-empty\n}catch(e){}}}/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/resolve-path\n */function resolvePath(to,fromPathname){if(fromPathname===void 0){fromPathname=\"/\";}var _ref11=typeof to===\"string\"?parsePath(to):to,toPathname=_ref11.pathname,_ref11$search=_ref11.search,search=_ref11$search===void 0?\"\":_ref11$search,_ref11$hash=_ref11.hash,hash=_ref11$hash===void 0?\"\":_ref11$hash;var pathname=toPathname?toPathname.startsWith(\"/\")?toPathname:resolvePathname(toPathname,fromPathname):fromPathname;return{pathname:pathname,search:normalizeSearch(search),hash:normalizeHash(hash)};}function resolvePathname(relativePath,fromPathname){var segments=fromPathname.replace(/\\/+$/,\"\").split(\"/\");var relativeSegments=relativePath.split(\"/\");relativeSegments.forEach(function(segment){if(segment===\"..\"){// Keep the root \"\" segment so the pathname starts at /\nif(segments.length>1)segments.pop();}else if(segment!==\".\"){segments.push(segment);}});return segments.length>1?segments.join(\"/\"):\"/\";}function getInvalidPathError(char,field,dest,path){return\"Cannot include a '\"+char+\"' character in a manually specified \"+(\"`to.\"+field+\"` field [\"+JSON.stringify(path)+\"].  Please separate it out to the \")+(\"`to.\"+dest+\"` field. Alternatively you may provide the full path as \")+\"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";}/**\n * @private\n */function resolveTo(toArg,routePathnames,locationPathname,isPathRelative){if(isPathRelative===void 0){isPathRelative=false;}var to;if(typeof toArg===\"string\"){to=parsePath(toArg);}else{to=_extends({},toArg);invariant(!to.pathname||!to.pathname.includes(\"?\"),getInvalidPathError(\"?\",\"pathname\",\"search\",to));invariant(!to.pathname||!to.pathname.includes(\"#\"),getInvalidPathError(\"#\",\"pathname\",\"hash\",to));invariant(!to.search||!to.search.includes(\"#\"),getInvalidPathError(\"#\",\"search\",\"hash\",to));}var isEmptyPath=toArg===\"\"||to.pathname===\"\";var toPathname=isEmptyPath?\"/\":to.pathname;var from;// Routing is relative to the current pathname if explicitly requested.\n//\n// If a pathname is explicitly provided in `to`, it should be relative to the\n// route context. This is explained in `Note on `<Link to>` values` in our\n// migration guide from v5 as a means of disambiguation between `to` values\n// that begin with `/` and those that do not. However, this is problematic for\n// `to` values that do not provide a pathname. `to` can simply be a search or\n// hash string, in which case we should assume that the navigation is relative\n// to the current location's pathname and *not* the route pathname.\nif(isPathRelative||toPathname==null){from=locationPathname;}else{var routePathnameIndex=routePathnames.length-1;if(toPathname.startsWith(\"..\")){var toSegments=toPathname.split(\"/\");// Each leading .. segment means \"go up one route\" instead of \"go up one\n// URL segment\".  This is a key difference from how <a href> works and a\n// major reason we call this a \"to\" value instead of a \"href\".\nwhile(toSegments[0]===\"..\"){toSegments.shift();routePathnameIndex-=1;}to.pathname=toSegments.join(\"/\");}// If there are more \"..\" segments than parent routes, resolve relative to\n// the root / URL.\nfrom=routePathnameIndex>=0?routePathnames[routePathnameIndex]:\"/\";}var path=resolvePath(to,from);// Ensure the pathname has a trailing slash if the original \"to\" had one\nvar hasExplicitTrailingSlash=toPathname&&toPathname!==\"/\"&&toPathname.endsWith(\"/\");// Or if this was a link to the current path which has a trailing slash\nvar hasCurrentTrailingSlash=(isEmptyPath||toPathname===\".\")&&locationPathname.endsWith(\"/\");if(!path.pathname.endsWith(\"/\")&&(hasExplicitTrailingSlash||hasCurrentTrailingSlash)){path.pathname+=\"/\";}return path;}/**\n * @private\n */function getToPathname(to){// Empty strings should be treated the same as / paths\nreturn to===\"\"||to.pathname===\"\"?\"/\":typeof to===\"string\"?parsePath(to).pathname:to.pathname;}/**\n * @private\n */var joinPaths=function joinPaths(paths){return paths.join(\"/\").replace(/\\/\\/+/g,\"/\");};/**\n * @private\n */var normalizePathname=function normalizePathname(pathname){return pathname.replace(/\\/+$/,\"\").replace(/^\\/*/,\"/\");};/**\n * @private\n */var normalizeSearch=function normalizeSearch(search){return!search||search===\"?\"?\"\":search.startsWith(\"?\")?search:\"?\"+search;};/**\n * @private\n */var normalizeHash=function normalizeHash(hash){return!hash||hash===\"#\"?\"\":hash.startsWith(\"#\")?hash:\"#\"+hash;};/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */var json=function json(data,init){if(init===void 0){init={};}var responseInit=typeof init===\"number\"?{status:init}:init;var headers=new Headers(responseInit.headers);if(!headers.has(\"Content-Type\")){headers.set(\"Content-Type\",\"application/json; charset=utf-8\");}return new Response(JSON.stringify(data),_extends({},responseInit,{headers:headers}));};var AbortedDeferredError=/*#__PURE__*/function(_Error){_inherits(AbortedDeferredError,_Error);var _super=_createSuper(AbortedDeferredError);function AbortedDeferredError(){_classCallCheck(this,AbortedDeferredError);return _super.apply(this,arguments);}return _createClass(AbortedDeferredError);}(/*#__PURE__*/_wrapNativeSuper(Error));var DeferredData=/*#__PURE__*/function(){function DeferredData(data){var _this=this;_classCallCheck(this,DeferredData);this.pendingKeys=new Set();this.subscriber=undefined;invariant(data&&typeof data===\"object\"&&!Array.isArray(data),\"defer() only accepts plain objects\");// Set up an AbortController + Promise we can race against to exit early\n// cancellation\nvar reject;this.abortPromise=new Promise(function(_,r){return reject=r;});this.controller=new AbortController();var onAbort=function onAbort(){return reject(new AbortedDeferredError(\"Deferred data aborted\"));};this.unlistenAbortSignal=function(){return _this.controller.signal.removeEventListener(\"abort\",onAbort);};this.controller.signal.addEventListener(\"abort\",onAbort);this.data=Object.entries(data).reduce(function(acc,_ref){var _ref12=_slicedToArray(_ref,2),key=_ref12[0],value=_ref12[1];return Object.assign(acc,_defineProperty({},key,_this.trackPromise(key,value)));},{});}_createClass(DeferredData,[{key:\"trackPromise\",value:function trackPromise(key,value){var _this2=this;if(!(value instanceof Promise)){return value;}this.pendingKeys.add(key);// We store a little wrapper promise that will be extended with\n// _data/_error props upon resolve/reject\nvar promise=Promise.race([value,this.abortPromise]).then(function(data){return _this2.onSettle(promise,key,null,data);},function(error){return _this2.onSettle(promise,key,error);});// Register rejection listeners to avoid uncaught promise rejections on\n// errors or aborted deferred values\npromise.catch(function(){});Object.defineProperty(promise,\"_tracked\",{get:function get(){return true;}});return promise;}},{key:\"onSettle\",value:function onSettle(promise,key,error,data){if(this.controller.signal.aborted&&error instanceof AbortedDeferredError){this.unlistenAbortSignal();Object.defineProperty(promise,\"_error\",{get:function get(){return error;}});return Promise.reject(error);}this.pendingKeys.delete(key);if(this.done){// Nothing left to abort!\nthis.unlistenAbortSignal();}var subscriber=this.subscriber;if(error){Object.defineProperty(promise,\"_error\",{get:function get(){return error;}});subscriber&&subscriber(false);return Promise.reject(error);}Object.defineProperty(promise,\"_data\",{get:function get(){return data;}});subscriber&&subscriber(false);return data;}},{key:\"subscribe\",value:function subscribe(fn){this.subscriber=fn;}},{key:\"cancel\",value:function cancel(){var _this3=this;this.controller.abort();this.pendingKeys.forEach(function(v,k){return _this3.pendingKeys.delete(k);});var subscriber=this.subscriber;subscriber&&subscriber(true);}},{key:\"resolveData\",value:function(){var _resolveData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(signal){var _this4=this;var aborted,onAbort;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:aborted=false;if(this.done){_context.next=7;break;}onAbort=function onAbort(){return _this4.cancel();};signal.addEventListener(\"abort\",onAbort);_context.next=6;return new Promise(function(resolve){_this4.subscribe(function(aborted){signal.removeEventListener(\"abort\",onAbort);if(aborted||_this4.done){resolve(aborted);}});});case 6:aborted=_context.sent;case 7:return _context.abrupt(\"return\",aborted);case 8:case\"end\":return _context.stop();}}},_callee,this);}));function resolveData(_x){return _resolveData.apply(this,arguments);}return resolveData;}()},{key:\"done\",get:function get(){return this.pendingKeys.size===0;}},{key:\"unwrappedData\",get:function get(){invariant(this.data!==null&&this.done,\"Can only unwrap data on initialized and settled deferreds\");return Object.entries(this.data).reduce(function(acc,_ref2){var _ref13=_slicedToArray(_ref2,2),key=_ref13[0],value=_ref13[1];return Object.assign(acc,_defineProperty({},key,unwrapTrackedPromise(value)));},{});}}]);return DeferredData;}();function isTrackedPromise(value){return value instanceof Promise&&value._tracked===true;}function unwrapTrackedPromise(value){if(!isTrackedPromise(value)){return value;}if(value._error){throw value._error;}return value._data;}function defer(data){return new DeferredData(data);}/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */var redirect=function redirect(url,init){if(init===void 0){init=302;}var responseInit=init;if(typeof responseInit===\"number\"){responseInit={status:responseInit};}else if(typeof responseInit.status===\"undefined\"){responseInit.status=302;}var headers=new Headers(responseInit.headers);headers.set(\"Location\",url);return new Response(null,_extends({},responseInit,{headers:headers}));};/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */var ErrorResponse=/*#__PURE__*/_createClass(function ErrorResponse(status,statusText,data){_classCallCheck(this,ErrorResponse);this.status=status;this.statusText=statusText||\"\";this.data=data;});/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response throw from an action/loader\n */function isRouteErrorResponse(e){return e instanceof ErrorResponse;}var IDLE_NAVIGATION={state:\"idle\",location:undefined,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined};var IDLE_FETCHER={state:\"idle\",data:undefined,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined};//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */function createRouter(init){invariant(init.routes.length>0,\"You must provide a non-empty routes array to createRouter\");var dataRoutes=convertRoutesToDataRoutes(init.routes);// Cleanup function for history\nvar unlistenHistory=null;// Externally-provided functions to call on all state changes\nvar subscribers=new Set();// Externally-provided object to hold scroll restoration locations during routing\nvar savedScrollPositions=null;// Externally-provided function to get scroll restoration keys\nvar getScrollRestorationKey=null;// Externally-provided function to get current scroll position\nvar getScrollPosition=null;// One-time flag to control the initial hydration scroll restoration.  Because\n// we don't get the saved positions from <ScrollRestoration /> until _after_\n// the initial render, we need to manually trigger a separate updateState to\n// send along the restoreScrollPosition\nvar initialScrollRestored=false;var initialMatches=matchRoutes(dataRoutes,init.history.location,init.basename);var initialErrors=null;if(initialMatches==null){// If we do not match a user-provided-route, fall back to the root\n// to allow the error boundary to take over\nvar _getNotFoundMatches=getNotFoundMatches(dataRoutes),matches=_getNotFoundMatches.matches,route=_getNotFoundMatches.route,error=_getNotFoundMatches.error;initialMatches=matches;initialErrors=_defineProperty({},route.id,error);}var initialized=!initialMatches.some(function(m){return m.route.loader;})||init.hydrationData!=null;var router;var state={historyAction:init.history.action,location:init.history.location,matches:initialMatches,initialized:initialized,navigation:IDLE_NAVIGATION,restoreScrollPosition:null,preventScrollReset:false,revalidation:\"idle\",loaderData:init.hydrationData&&init.hydrationData.loaderData||{},actionData:init.hydrationData&&init.hydrationData.actionData||null,errors:init.hydrationData&&init.hydrationData.errors||initialErrors,fetchers:new Map()};// -- Stateful internal variables to manage navigations --\n// Current navigation in progress (to be committed in completeNavigation)\nvar pendingAction=Action.Pop;// Should the current navigation prevent the scroll reset if scroll cannot\n// be restored?\nvar pendingPreventScrollReset=false;// AbortController for the active navigation\nvar pendingNavigationController;// We use this to avoid touching history in completeNavigation if a\n// revalidation is entirely uninterrupted\nvar isUninterruptedRevalidation=false;// Use this internal flag to force revalidation of all loaders:\n//  - submissions (completed or interrupted)\n//  - useRevalidate()\n//  - X-Remix-Revalidate (from redirect)\nvar isRevalidationRequired=false;// Use this internal array to capture routes that require revalidation due\n// to a cancelled deferred on action submission\nvar cancelledDeferredRoutes=[];// Use this internal array to capture fetcher loads that were cancelled by an\n// action navigation and require revalidation\nvar cancelledFetcherLoads=[];// AbortControllers for any in-flight fetchers\nvar fetchControllers=new Map();// Track loads based on the order in which they started\nvar incrementingLoadId=0;// Track the outstanding pending navigation data load to be compared against\n// the globally incrementing load when a fetcher load lands after a completed\n// navigation\nvar pendingNavigationLoadId=-1;// Fetchers that triggered data reloads as a result of their actions\nvar fetchReloadIds=new Map();// Fetchers that triggered redirect navigations from their actions\nvar fetchRedirectIds=new Set();// Most recent href/match for fetcher.load calls for fetchers\nvar fetchLoadMatches=new Map();// Store DeferredData instances for active route matches.  When a\n// route loader returns defer() we stick one in here.  Then, when a nested\n// promise resolves we update loaderData.  If a new navigation starts we\n// cancel active deferreds for eliminated routes.\nvar activeDeferreds=new Map();// Initialize the router, all side effects should be kicked off from here.\n// Implemented as a Fluent API for ease of:\n//   let router = createRouter(init).initialize();\nfunction initialize(){// If history informs us of a POP navigation, start the navigation but do not update\n// state.  We'll update our own state once the navigation completes\nunlistenHistory=init.history.listen(function(_ref){var historyAction=_ref.action,location=_ref.location;return startNavigation(historyAction,location);});// Kick off initial data load if needed.  Use Pop to avoid modifying history\nif(!state.initialized){startNavigation(Action.Pop,state.location);}return router;}// Clean up a router and it's side effects\nfunction dispose(){if(unlistenHistory){unlistenHistory();}subscribers.clear();pendingNavigationController&&pendingNavigationController.abort();state.fetchers.forEach(function(_,key){return deleteFetcher(key);});}// Subscribe to state updates for the router\nfunction subscribe(fn){subscribers.add(fn);return function(){return subscribers.delete(fn);};}// Update our state and notify the calling context of the change\nfunction updateState(newState){state=_extends({},state,newState);subscribers.forEach(function(subscriber){return subscriber(state);});}// Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n// and setting state.[historyAction/location/matches] to the new route.\n// - Location is a required param\n// - Navigation will always be set to IDLE_NAVIGATION\n// - Can pass any other state in newState\nfunction completeNavigation(location,newState){var _state$navigation$for;// Deduce if we're in a loading/actionReload state:\n// - We have committed actionData in the store\n// - The current navigation was a submission\n// - We're past the submitting state and into the loading state\n// - The location we've finished loading is different from the submission\n//   location, indicating we redirected from the action (avoids false\n//   positives for loading/submissionRedirect when actionData returned\n//   on a prior submission)\nvar isActionReload=state.actionData!=null&&state.navigation.formMethod!=null&&state.navigation.state===\"loading\"&&((_state$navigation$for=state.navigation.formAction)==null?void 0:_state$navigation$for.split(\"?\")[0])===location.pathname;// Always preserve any existing loaderData from re-used routes\nvar newLoaderData=newState.loaderData?{loaderData:mergeLoaderData(state.loaderData,newState.loaderData,newState.matches||[])}:{};updateState(_extends({},isActionReload?{}:{actionData:null},newState,newLoaderData,{historyAction:pendingAction,location:location,initialized:true,navigation:IDLE_NAVIGATION,revalidation:\"idle\",// Don't restore on submission navigations\nrestoreScrollPosition:state.navigation.formData?false:getSavedScrollPosition(location,newState.matches||state.matches),preventScrollReset:pendingPreventScrollReset}));if(isUninterruptedRevalidation);else if(pendingAction===Action.Pop);else if(pendingAction===Action.Push){init.history.push(location,location.state);}else if(pendingAction===Action.Replace){init.history.replace(location,location.state);}// Reset stateful navigation vars\npendingAction=Action.Pop;pendingPreventScrollReset=false;isUninterruptedRevalidation=false;isRevalidationRequired=false;cancelledDeferredRoutes=[];cancelledFetcherLoads=[];}// Trigger a navigation event, which can either be a numerical POP or a PUSH\n// replace with an optional submission\nfunction navigate(_x2,_x3){return _navigate.apply(this,arguments);}// Revalidate all current loaders.  If a navigation is in progress or if this\n// is interrupted by a navigation, allow this to \"succeed\" by calling all\n// loaders during the next loader round\nfunction _navigate(){_navigate=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(to,opts){var _normalizeNavigateOpt2,path,submission,error,location,historyAction,preventScrollReset;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(typeof to===\"number\")){_context2.next=3;break;}init.history.go(to);return _context2.abrupt(\"return\");case 3:_normalizeNavigateOpt2=normalizeNavigateOptions(to,opts),path=_normalizeNavigateOpt2.path,submission=_normalizeNavigateOpt2.submission,error=_normalizeNavigateOpt2.error;location=createLocation(state.location,path,opts&&opts.state);historyAction=(opts&&opts.replace)===true||submission!=null?Action.Replace:Action.Push;preventScrollReset=opts&&\"preventScrollReset\"in opts?opts.preventScrollReset===true:undefined;_context2.next=9;return startNavigation(historyAction,location,{submission:submission,// Send through the formData serialization error if we have one so we can\n// render at the right error boundary after we match routes\npendingError:error,preventScrollReset:preventScrollReset,replace:opts&&opts.replace});case 9:return _context2.abrupt(\"return\",_context2.sent);case 10:case\"end\":return _context2.stop();}}},_callee2);}));return _navigate.apply(this,arguments);}function revalidate(){interruptActiveLoads();updateState({revalidation:\"loading\"});// If we're currently submitting an action, we don't need to start a new\n// navigation, we'll just let the follow up loader execution call all loaders\nif(state.navigation.state===\"submitting\"){return;}// If we're currently in an idle state, start a new navigation for the current\n// action/location and mark it as uninterrupted, which will skip the history\n// update in completeNavigation\nif(state.navigation.state===\"idle\"){startNavigation(state.historyAction,state.location,{startUninterruptedRevalidation:true});return;}// Otherwise, if we're currently in a loading state, just start a new\n// navigation to the navigation.location but do not trigger an uninterrupted\n// revalidation so that history correctly updates once the navigation completes\nstartNavigation(pendingAction||state.historyAction,state.navigation.location,{overrideNavigation:state.navigation});}// Start a navigation to the given action/location.  Can optionally provide a\n// overrideNavigation which will override the normalLoad in the case of a redirect\n// navigation\nfunction startNavigation(_x4,_x5,_x6){return _startNavigation.apply(this,arguments);}// Call the action matched by the leaf route for this navigation and handle\n// redirects/errors\nfunction _startNavigation(){_startNavigation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(historyAction,location,opts){var loadingNavigation,matches,_getNotFoundMatches2,notFoundMatches,_route,_error,request,pendingActionData,pendingError,actionOutput,navigation,_yield$handleLoaders,shortCircuited,loaderData,errors;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:// Abort any in-progress navigations and start a new one. Unset any ongoing\n// uninterrupted revalidations unless told otherwise, since we want this\n// new navigation to update history normally\npendingNavigationController&&pendingNavigationController.abort();pendingNavigationController=null;pendingAction=historyAction;isUninterruptedRevalidation=(opts&&opts.startUninterruptedRevalidation)===true;// Save the current scroll position every time we start a new navigation,\n// and track whether we should reset scroll on completion\nsaveScrollPosition(state.location,state.matches);pendingPreventScrollReset=(opts&&opts.preventScrollReset)===true;loadingNavigation=opts&&opts.overrideNavigation;matches=matchRoutes(dataRoutes,location,init.basename);// Short circuit with a 404 on the root error boundary if we match nothing\nif(matches){_context3.next=13;break;}_getNotFoundMatches2=getNotFoundMatches(dataRoutes),notFoundMatches=_getNotFoundMatches2.matches,_route=_getNotFoundMatches2.route,_error=_getNotFoundMatches2.error;// Cancel all pending deferred on 404s since we don't keep any routes\ncancelActiveDeferreds();completeNavigation(location,{matches:notFoundMatches,loaderData:{},errors:_defineProperty({},_route.id,_error)});return _context3.abrupt(\"return\");case 13:if(!isHashChangeOnly(state.location,location)){_context3.next=16;break;}completeNavigation(location,{matches:matches});return _context3.abrupt(\"return\");case 16:// Create a controller/Request for this navigation\npendingNavigationController=new AbortController();request=createRequest(location,pendingNavigationController.signal,opts&&opts.submission);if(!(opts&&opts.pendingError)){_context3.next=22;break;}// If we have a pendingError, it means the user attempted a GET submission\n// with binary FormData so assign here and skip to handleLoaders.  That\n// way we handle calling loaders above the boundary etc.  It's not really\n// different from an actionError in that sense.\npendingError=_defineProperty({},findNearestBoundary(matches).route.id,opts.pendingError);_context3.next=32;break;case 22:if(!(opts&&opts.submission)){_context3.next=32;break;}_context3.next=25;return handleAction(request,location,opts.submission,matches,{replace:opts.replace});case 25:actionOutput=_context3.sent;if(!actionOutput.shortCircuited){_context3.next=28;break;}return _context3.abrupt(\"return\");case 28:pendingActionData=actionOutput.pendingActionData;pendingError=actionOutput.pendingActionError;navigation=_extends({state:\"loading\",location:location},opts.submission);loadingNavigation=navigation;case 32:_context3.next=34;return handleLoaders(request,location,matches,loadingNavigation,opts&&opts.submission,opts&&opts.replace,pendingActionData,pendingError);case 34:_yield$handleLoaders=_context3.sent;shortCircuited=_yield$handleLoaders.shortCircuited;loaderData=_yield$handleLoaders.loaderData;errors=_yield$handleLoaders.errors;if(!shortCircuited){_context3.next=40;break;}return _context3.abrupt(\"return\");case 40:// Clean up now that the action/loaders have completed.  Don't clean up if\n// we short circuited because pendingNavigationController will have already\n// been assigned to a new controller for the next navigation\npendingNavigationController=null;completeNavigation(location,{matches:matches,loaderData:loaderData,errors:errors});case 42:case\"end\":return _context3.stop();}}},_callee3);}));return _startNavigation.apply(this,arguments);}function handleAction(_x7,_x8,_x9,_x10,_x11){return _handleAction.apply(this,arguments);}// Call all applicable loaders for the given matches, handling redirects,\n// errors, etc.\nfunction _handleAction(){_handleAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(request,location,submission,matches,opts){var navigation,result,actionMatch,redirectNavigation,boundaryMatch;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:interruptActiveLoads();// Put us in a submitting state\nnavigation=_extends({state:\"submitting\",location:location},submission);updateState({navigation:navigation});// Call our action and get the result\nactionMatch=getTargetMatch(matches,location);if(actionMatch.route.action){_context4.next=8;break;}result=getMethodNotAllowedResult(location);_context4.next=13;break;case 8:_context4.next=10;return callLoaderOrAction(\"action\",request,actionMatch);case 10:result=_context4.sent;if(!request.signal.aborted){_context4.next=13;break;}return _context4.abrupt(\"return\",{shortCircuited:true});case 13:if(!isRedirectResult(result)){_context4.next=18;break;}redirectNavigation=_extends({state:\"loading\",location:createLocation(state.location,result.location)},submission);_context4.next=17;return startRedirectNavigation(result,redirectNavigation,opts&&opts.replace);case 17:return _context4.abrupt(\"return\",{shortCircuited:true});case 18:if(!isErrorResult(result)){_context4.next=22;break;}// Store off the pending error - we use it to determine which loaders\n// to call and will commit it when we complete the navigation\nboundaryMatch=findNearestBoundary(matches,actionMatch.route.id);// By default, all submissions are REPLACE navigations, but if the\n// action threw an error that'll be rendered in an errorElement, we fall\n// back to PUSH so that the user can use the back button to get back to\n// the pre-submission form location to try again\nif((opts&&opts.replace)!==true){pendingAction=Action.Push;}return _context4.abrupt(\"return\",{pendingActionError:_defineProperty({},boundaryMatch.route.id,result.error)});case 22:if(!isDeferredResult(result)){_context4.next=24;break;}throw new Error(\"defer() is not supported in actions\");case 24:return _context4.abrupt(\"return\",{pendingActionData:_defineProperty({},actionMatch.route.id,result.data)});case 25:case\"end\":return _context4.stop();}}},_callee4);}));return _handleAction.apply(this,arguments);}function handleLoaders(_x12,_x13,_x14,_x15,_x16,_x17,_x18,_x19){return _handleLoaders.apply(this,arguments);}function _handleLoaders(){_handleLoaders=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(request,location,matches,overrideNavigation,submission,replace,pendingActionData,pendingError){var loadingNavigation,navigation,_getMatchesToLoad,_getMatchesToLoad2,matchesToLoad,revalidatingFetchers,_yield$callLoadersAnd,results,loaderResults,fetcherResults,redirect,redirectNavigation,_processLoaderData,loaderData,errors,didAbortFetchLoads;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:// Figure out the right navigation we want to use for data loading\nloadingNavigation=overrideNavigation;if(!loadingNavigation){navigation={state:\"loading\",location:location,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined};loadingNavigation=navigation;}_getMatchesToLoad=getMatchesToLoad(state,matches,submission,location,isRevalidationRequired,cancelledDeferredRoutes,cancelledFetcherLoads,pendingActionData,pendingError,fetchLoadMatches),_getMatchesToLoad2=_slicedToArray(_getMatchesToLoad,2),matchesToLoad=_getMatchesToLoad2[0],revalidatingFetchers=_getMatchesToLoad2[1];// Cancel pending deferreds for no-longer-matched routes or routes we're\n// about to reload.  Note that if this is an action reload we would have\n// already cancelled all pending deferreds so this would be a no-op\ncancelActiveDeferreds(function(routeId){return!(matches&&matches.some(function(m){return m.route.id===routeId;}))||matchesToLoad&&matchesToLoad.some(function(m){return m.route.id===routeId;});});// Short circuit if we have no loaders to run\nif(!(matchesToLoad.length===0&&revalidatingFetchers.length===0)){_context5.next=7;break;}completeNavigation(location,{matches:matches,loaderData:mergeLoaderData(state.loaderData,{},matches),// Commit pending error if we're short circuiting\nerrors:pendingError||null,actionData:pendingActionData||null});return _context5.abrupt(\"return\",{shortCircuited:true});case 7:// If this is an uninterrupted revalidation, we remain in our current idle\n// state.  If not, we need to switch to our loading state and load data,\n// preserving any new action data or existing action data (in the case of\n// a revalidation interrupting an actionReload)\nif(!isUninterruptedRevalidation){revalidatingFetchers.forEach(function(_ref2){var _ref14=_slicedToArray(_ref2,1),key=_ref14[0];var fetcher=state.fetchers.get(key);var revalidatingFetcher={state:\"loading\",data:fetcher&&fetcher.data,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined};state.fetchers.set(key,revalidatingFetcher);});updateState(_extends({navigation:loadingNavigation,actionData:pendingActionData||state.actionData||null},revalidatingFetchers.length>0?{fetchers:new Map(state.fetchers)}:{}));}pendingNavigationLoadId=++incrementingLoadId;revalidatingFetchers.forEach(function(_ref3){var _ref15=_slicedToArray(_ref3,1),key=_ref15[0];return fetchControllers.set(key,pendingNavigationController);});_context5.next=12;return callLoadersAndMaybeResolveData(state.matches,matchesToLoad,revalidatingFetchers,request);case 12:_yield$callLoadersAnd=_context5.sent;results=_yield$callLoadersAnd.results;loaderResults=_yield$callLoadersAnd.loaderResults;fetcherResults=_yield$callLoadersAnd.fetcherResults;if(!request.signal.aborted){_context5.next=18;break;}return _context5.abrupt(\"return\",{shortCircuited:true});case 18:// Clean up _after_ loaders have completed.  Don't clean up if we short\n// circuited because fetchControllers would have been aborted and\n// reassigned to new controllers for the next navigation\nrevalidatingFetchers.forEach(function(_ref4){var _ref16=_slicedToArray(_ref4,1),key=_ref16[0];return fetchControllers.delete(key);});// If any loaders returned a redirect Response, start a new REPLACE navigation\nredirect=findRedirect(results);if(!redirect){_context5.next=25;break;}redirectNavigation=getLoaderRedirect(state,redirect);_context5.next=24;return startRedirectNavigation(redirect,redirectNavigation,replace);case 24:return _context5.abrupt(\"return\",{shortCircuited:true});case 25:// Process and commit output from loaders\n_processLoaderData=processLoaderData(state,matches,matchesToLoad,loaderResults,pendingError,revalidatingFetchers,fetcherResults,activeDeferreds),loaderData=_processLoaderData.loaderData,errors=_processLoaderData.errors;// Wire up subscribers to update loaderData as promises settle\nactiveDeferreds.forEach(function(deferredData,routeId){deferredData.subscribe(function(aborted){// Note: No need to updateState here since the TrackedPromise on\n// loaderData is stable across resolve/reject\n// Remove this instance if we were aborted or if promises have settled\nif(aborted||deferredData.done){activeDeferreds.delete(routeId);}});});markFetchRedirectsDone();didAbortFetchLoads=abortStaleFetchLoads(pendingNavigationLoadId);return _context5.abrupt(\"return\",_extends({loaderData:loaderData,errors:errors},didAbortFetchLoads||revalidatingFetchers.length>0?{fetchers:new Map(state.fetchers)}:{}));case 30:case\"end\":return _context5.stop();}}},_callee5);}));return _handleLoaders.apply(this,arguments);}function getFetcher(key){return state.fetchers.get(key)||IDLE_FETCHER;}// Trigger a fetcher load/submit for the given fetcher key\nfunction fetch(key,routeId,href,opts){if(typeof AbortController===\"undefined\"){throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \"+\"You are likely calling a useFetcher() method in the body of your component. \"+\"Try moving it to a useEffect or a callback.\");}if(fetchControllers.has(key))abortFetcher(key);var matches=matchRoutes(dataRoutes,href,init.basename);if(!matches){setFetcherError(key,routeId,new ErrorResponse(404,\"Not Found\",null));return;}var _normalizeNavigateOpt=normalizeNavigateOptions(href,opts,true),path=_normalizeNavigateOpt.path,submission=_normalizeNavigateOpt.submission;var match=getTargetMatch(matches,path);if(submission){handleFetcherAction(key,routeId,path,match,submission);return;}// Store off the match so we can call it's shouldRevalidate on subsequent\n// revalidations\nfetchLoadMatches.set(key,[path,match]);handleFetcherLoader(key,routeId,path,match);}// Call the action for the matched fetcher.submit(), and then handle redirects,\n// errors, and revalidation\nfunction handleFetcherAction(_x20,_x21,_x22,_x23,_x24){return _handleFetcherAction.apply(this,arguments);}// Call the matched loader for fetcher.load(), handling redirects, errors, etc.\nfunction _handleFetcherAction(){_handleFetcherAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(key,routeId,path,match,submission){var _getMethodNotAllowedR,_error2,existingFetcher,fetcher,abortController,fetchRequest,actionResult,loadingFetcher,redirectNavigation,nextLocation,revalidationRequest,matches,loadId,loadFetcher,_getMatchesToLoad3,_getMatchesToLoad4,matchesToLoad,revalidatingFetchers,_yield$callLoadersAnd2,results,loaderResults,fetcherResults,redirect,_processLoaderData2,loaderData,errors,doneFetcher,didAbortFetchLoads;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:interruptActiveLoads();fetchLoadMatches.delete(key);if(match.route.action){_context6.next=6;break;}_getMethodNotAllowedR=getMethodNotAllowedResult(path),_error2=_getMethodNotAllowedR.error;setFetcherError(key,routeId,_error2);return _context6.abrupt(\"return\");case 6:// Put this fetcher into it's submitting state\nexistingFetcher=state.fetchers.get(key);fetcher=_extends({state:\"submitting\"},submission,{data:existingFetcher&&existingFetcher.data});state.fetchers.set(key,fetcher);updateState({fetchers:new Map(state.fetchers)});// Call the action for the fetcher\nabortController=new AbortController();fetchRequest=createRequest(path,abortController.signal,submission);fetchControllers.set(key,abortController);_context6.next=15;return callLoaderOrAction(\"action\",fetchRequest,match);case 15:actionResult=_context6.sent;if(!fetchRequest.signal.aborted){_context6.next=19;break;}// We can delete this so long as we weren't aborted by ou our own fetcher\n// re-submit which would have put _new_ controller is in fetchControllers\nif(fetchControllers.get(key)===abortController){fetchControllers.delete(key);}return _context6.abrupt(\"return\");case 19:if(!isRedirectResult(actionResult)){_context6.next=29;break;}fetchControllers.delete(key);fetchRedirectIds.add(key);loadingFetcher=_extends({state:\"loading\"},submission,{data:undefined});state.fetchers.set(key,loadingFetcher);updateState({fetchers:new Map(state.fetchers)});redirectNavigation=_extends({state:\"loading\",location:createLocation(state.location,actionResult.location)},submission);_context6.next=28;return startRedirectNavigation(actionResult,redirectNavigation);case 28:return _context6.abrupt(\"return\");case 29:if(!isErrorResult(actionResult)){_context6.next=32;break;}setFetcherError(key,routeId,actionResult.error);return _context6.abrupt(\"return\");case 32:if(isDeferredResult(actionResult)){invariant(false,\"defer() is not supported in actions\");}// Start the data load for current matches, or the next location if we're\n// in the middle of a navigation\nnextLocation=state.navigation.location||state.location;revalidationRequest=createRequest(nextLocation,abortController.signal);matches=state.navigation.state!==\"idle\"?matchRoutes(dataRoutes,state.navigation.location,init.basename):state.matches;invariant(matches,\"Didn't find any matches after fetcher action\");loadId=++incrementingLoadId;fetchReloadIds.set(key,loadId);loadFetcher=_extends({state:\"loading\",data:actionResult.data},submission);state.fetchers.set(key,loadFetcher);_getMatchesToLoad3=getMatchesToLoad(state,matches,submission,nextLocation,isRevalidationRequired,cancelledDeferredRoutes,cancelledFetcherLoads,_defineProperty({},match.route.id,actionResult.data),undefined,// No need to send through errors since we short circuit above\nfetchLoadMatches),_getMatchesToLoad4=_slicedToArray(_getMatchesToLoad3,2),matchesToLoad=_getMatchesToLoad4[0],revalidatingFetchers=_getMatchesToLoad4[1];// Put all revalidating fetchers into the loading state, except for the\n// current fetcher which we want to keep in it's current loading state which\n// contains it's action submission info + action data\nrevalidatingFetchers.filter(function(_ref5){var _ref17=_slicedToArray(_ref5,1),staleKey=_ref17[0];return staleKey!==key;}).forEach(function(_ref6){var _ref18=_slicedToArray(_ref6,1),staleKey=_ref18[0];var existingFetcher=state.fetchers.get(staleKey);var revalidatingFetcher={state:\"loading\",data:existingFetcher&&existingFetcher.data,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined};state.fetchers.set(staleKey,revalidatingFetcher);fetchControllers.set(staleKey,abortController);});updateState({fetchers:new Map(state.fetchers)});_context6.next=46;return callLoadersAndMaybeResolveData(state.matches,matchesToLoad,revalidatingFetchers,revalidationRequest);case 46:_yield$callLoadersAnd2=_context6.sent;results=_yield$callLoadersAnd2.results;loaderResults=_yield$callLoadersAnd2.loaderResults;fetcherResults=_yield$callLoadersAnd2.fetcherResults;if(!abortController.signal.aborted){_context6.next=52;break;}return _context6.abrupt(\"return\");case 52:fetchReloadIds.delete(key);fetchControllers.delete(key);revalidatingFetchers.forEach(function(_ref7){var _ref19=_slicedToArray(_ref7,1),staleKey=_ref19[0];return fetchControllers.delete(staleKey);});redirect=findRedirect(results);if(!redirect){_context6.next=61;break;}redirectNavigation=getLoaderRedirect(state,redirect);_context6.next=60;return startRedirectNavigation(redirect,redirectNavigation);case 60:return _context6.abrupt(\"return\");case 61:// Process and commit output from loaders\n_processLoaderData2=processLoaderData(state,state.matches,matchesToLoad,loaderResults,undefined,revalidatingFetchers,fetcherResults,activeDeferreds),loaderData=_processLoaderData2.loaderData,errors=_processLoaderData2.errors;doneFetcher={state:\"idle\",data:actionResult.data,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined};state.fetchers.set(key,doneFetcher);didAbortFetchLoads=abortStaleFetchLoads(loadId);// If we are currently in a navigation loading state and this fetcher is\n// more recent than the navigation, we want the newer data so abort the\n// navigation and complete it with the fetcher data\nif(state.navigation.state===\"loading\"&&loadId>pendingNavigationLoadId){invariant(pendingAction,\"Expected pending action\");pendingNavigationController&&pendingNavigationController.abort();completeNavigation(state.navigation.location,{matches:matches,loaderData:loaderData,errors:errors,fetchers:new Map(state.fetchers)});}else{// otherwise just update with the fetcher data, preserving any existing\n// loaderData for loaders that did not need to reload.  We have to\n// manually merge here since we aren't going through completeNavigation\nupdateState(_extends({errors:errors,loaderData:mergeLoaderData(state.loaderData,loaderData,matches)},didAbortFetchLoads?{fetchers:new Map(state.fetchers)}:{}));isRevalidationRequired=false;}case 66:case\"end\":return _context6.stop();}}},_callee6);}));return _handleFetcherAction.apply(this,arguments);}function handleFetcherLoader(_x25,_x26,_x27,_x28){return _handleFetcherLoader.apply(this,arguments);}/**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */function _handleFetcherLoader(){_handleFetcherLoader=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(key,routeId,path,match){var existingFetcher,loadingFetcher,abortController,fetchRequest,result,redirectNavigation,boundaryMatch,doneFetcher;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:existingFetcher=state.fetchers.get(key);// Put this fetcher into it's loading state\nloadingFetcher={state:\"loading\",formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined,data:existingFetcher&&existingFetcher.data};state.fetchers.set(key,loadingFetcher);updateState({fetchers:new Map(state.fetchers)});// Call the loader for this fetcher route match\nabortController=new AbortController();fetchRequest=createRequest(path,abortController.signal);fetchControllers.set(key,abortController);_context7.next=9;return callLoaderOrAction(\"loader\",fetchRequest,match);case 9:result=_context7.sent;if(!isDeferredResult(result)){_context7.next=17;break;}_context7.next=13;return resolveDeferredData(result,fetchRequest.signal,true);case 13:_context7.t0=_context7.sent;if(_context7.t0){_context7.next=16;break;}_context7.t0=result;case 16:result=_context7.t0;case 17:// We can delete this so long as we weren't aborted by ou our own fetcher\n// re-load which would have put _new_ controller is in fetchControllers\nif(fetchControllers.get(key)===abortController){fetchControllers.delete(key);}if(!fetchRequest.signal.aborted){_context7.next=20;break;}return _context7.abrupt(\"return\");case 20:if(!isRedirectResult(result)){_context7.next=25;break;}redirectNavigation=getLoaderRedirect(state,result);_context7.next=24;return startRedirectNavigation(result,redirectNavigation);case 24:return _context7.abrupt(\"return\");case 25:if(!isErrorResult(result)){_context7.next=30;break;}boundaryMatch=findNearestBoundary(state.matches,routeId);state.fetchers.delete(key);// TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n// do we need to behave any differently with our non-redirect errors?\n// What if it was a non-redirect Response?\nupdateState({fetchers:new Map(state.fetchers),errors:_defineProperty({},boundaryMatch.route.id,result.error)});return _context7.abrupt(\"return\");case 30:invariant(!isDeferredResult(result),\"Unhandled fetcher deferred data\");// Put the fetcher back into an idle state\ndoneFetcher={state:\"idle\",data:result.data,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined};state.fetchers.set(key,doneFetcher);updateState({fetchers:new Map(state.fetchers)});case 34:case\"end\":return _context7.stop();}}},_callee7);}));return _handleFetcherLoader.apply(this,arguments);}function startRedirectNavigation(_x29,_x30,_x31){return _startRedirectNavigation.apply(this,arguments);}function _startRedirectNavigation(){_startRedirectNavigation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(redirect,navigation,replace){var redirectHistoryAction;return _regeneratorRuntime().wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:if(redirect.revalidate){isRevalidationRequired=true;}invariant(navigation.location,\"Expected a location on the redirect navigation\");// There's no need to abort on redirects, since we don't detect the\n// redirect until the action/loaders have settled\npendingNavigationController=null;redirectHistoryAction=replace===true?Action.Replace:Action.Push;_context8.next=6;return startNavigation(redirectHistoryAction,navigation.location,{overrideNavigation:navigation});case 6:case\"end\":return _context8.stop();}}},_callee8);}));return _startRedirectNavigation.apply(this,arguments);}function callLoadersAndMaybeResolveData(_x32,_x33,_x34,_x35){return _callLoadersAndMaybeResolveData.apply(this,arguments);}function _callLoadersAndMaybeResolveData(){_callLoadersAndMaybeResolveData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(currentMatches,matchesToLoad,fetchersToLoad,request){var results,loaderResults,fetcherResults;return _regeneratorRuntime().wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_context9.next=2;return Promise.all([].concat(_toConsumableArray(matchesToLoad.map(function(m){return callLoaderOrAction(\"loader\",request,m);})),_toConsumableArray(fetchersToLoad.map(function(_ref8){var _ref20=_slicedToArray(_ref8,3),href=_ref20[1],match=_ref20[2];return callLoaderOrAction(\"loader\",createRequest(href,request.signal),match);}))));case 2:results=_context9.sent;loaderResults=results.slice(0,matchesToLoad.length);fetcherResults=results.slice(matchesToLoad.length);_context9.next=7;return Promise.all([resolveDeferredResults(currentMatches,matchesToLoad,loaderResults,request.signal,false,state.loaderData),resolveDeferredResults(currentMatches,fetchersToLoad.map(function(_ref9){var _ref21=_slicedToArray(_ref9,3),match=_ref21[2];return match;}),fetcherResults,request.signal,true)]);case 7:return _context9.abrupt(\"return\",{results:results,loaderResults:loaderResults,fetcherResults:fetcherResults});case 8:case\"end\":return _context9.stop();}}},_callee9);}));return _callLoadersAndMaybeResolveData.apply(this,arguments);}function interruptActiveLoads(){var _cancelledDeferredRou;// Every interruption triggers a revalidation\nisRevalidationRequired=true;// Cancel pending route-level deferreds and mark cancelled routes for\n// revalidation\n(_cancelledDeferredRou=cancelledDeferredRoutes).push.apply(_cancelledDeferredRou,_toConsumableArray(cancelActiveDeferreds()));// Abort in-flight fetcher loads\nfetchLoadMatches.forEach(function(_,key){if(fetchControllers.has(key)){cancelledFetcherLoads.push(key);abortFetcher(key);}});}function setFetcherError(key,routeId,error){var boundaryMatch=findNearestBoundary(state.matches,routeId);deleteFetcher(key);updateState({errors:_defineProperty({},boundaryMatch.route.id,error),fetchers:new Map(state.fetchers)});}function deleteFetcher(key){if(fetchControllers.has(key))abortFetcher(key);fetchLoadMatches.delete(key);fetchReloadIds.delete(key);fetchRedirectIds.delete(key);state.fetchers.delete(key);}function abortFetcher(key){var controller=fetchControllers.get(key);invariant(controller,\"Expected fetch controller: \"+key);controller.abort();fetchControllers.delete(key);}function markFetchersDone(keys){var _iterator=_createForOfIteratorHelper(keys),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var key=_step.value;var fetcher=getFetcher(key);var doneFetcher={state:\"idle\",data:fetcher.data,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined};state.fetchers.set(key,doneFetcher);}}catch(err){_iterator.e(err);}finally{_iterator.f();}}function markFetchRedirectsDone(){var doneKeys=[];var _iterator2=_createForOfIteratorHelper(fetchRedirectIds),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var key=_step2.value;var fetcher=state.fetchers.get(key);invariant(fetcher,\"Expected fetcher: \"+key);if(fetcher.state===\"loading\"){fetchRedirectIds.delete(key);doneKeys.push(key);}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}markFetchersDone(doneKeys);}function abortStaleFetchLoads(landedId){var yeetedKeys=[];var _iterator3=_createForOfIteratorHelper(fetchReloadIds),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var _step3$value=_slicedToArray(_step3.value,2),key=_step3$value[0],id=_step3$value[1];if(id<landedId){var fetcher=state.fetchers.get(key);invariant(fetcher,\"Expected fetcher: \"+key);if(fetcher.state===\"loading\"){abortFetcher(key);fetchReloadIds.delete(key);yeetedKeys.push(key);}}}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}markFetchersDone(yeetedKeys);return yeetedKeys.length>0;}function cancelActiveDeferreds(predicate){var cancelledRouteIds=[];activeDeferreds.forEach(function(dfd,routeId){if(!predicate||predicate(routeId)){// Cancel the deferred - but do not remove from activeDeferreds here -\n// we rely on the subscribers to do that so our tests can assert proper\n// cleanup via _internalActiveDeferreds\ndfd.cancel();cancelledRouteIds.push(routeId);activeDeferreds.delete(routeId);}});return cancelledRouteIds;}// Opt in to capturing and reporting scroll positions during navigations,\n// used by the <ScrollRestoration> component\nfunction enableScrollRestoration(positions,getPosition,getKey){savedScrollPositions=positions;getScrollPosition=getPosition;getScrollRestorationKey=getKey||function(location){return location.key;};// Perform initial hydration scroll restoration, since we miss the boat on\n// the initial updateState() because we've not yet rendered <ScrollRestoration/>\n// and therefore have no savedScrollPositions available\nif(!initialScrollRestored&&state.navigation===IDLE_NAVIGATION){initialScrollRestored=true;var y=getSavedScrollPosition(state.location,state.matches);if(y!=null){updateState({restoreScrollPosition:y});}}return function(){savedScrollPositions=null;getScrollPosition=null;getScrollRestorationKey=null;};}function saveScrollPosition(location,matches){if(savedScrollPositions&&getScrollRestorationKey&&getScrollPosition){var userMatches=matches.map(function(m){return createUseMatchesMatch(m,state.loaderData);});var key=getScrollRestorationKey(location,userMatches)||location.key;savedScrollPositions[key]=getScrollPosition();}}function getSavedScrollPosition(location,matches){if(savedScrollPositions&&getScrollRestorationKey&&getScrollPosition){var userMatches=matches.map(function(m){return createUseMatchesMatch(m,state.loaderData);});var key=getScrollRestorationKey(location,userMatches)||location.key;var y=savedScrollPositions[key];if(typeof y===\"number\"){return y;}}return null;}router={get basename(){return init.basename;},get state(){return state;},get routes(){return dataRoutes;},initialize:initialize,subscribe:subscribe,enableScrollRestoration:enableScrollRestoration,navigate:navigate,fetch:fetch,revalidate:revalidate,createHref:createHref,getFetcher:getFetcher,deleteFetcher:deleteFetcher,dispose:dispose,_internalFetchControllers:fetchControllers,_internalActiveDeferreds:activeDeferreds};return router;}//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nfunction unstable_createStaticHandler(routes){invariant(routes.length>0,\"You must provide a non-empty routes array to unstable_createStaticHandler\");var dataRoutes=convertRoutesToDataRoutes(routes);function query(_x36){return _query.apply(this,arguments);}function _query(){_query=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(request){var _yield$queryImpl,location,result;return _regeneratorRuntime().wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:_context10.next=2;return queryImpl(request);case 2:_yield$queryImpl=_context10.sent;location=_yield$queryImpl.location;result=_yield$queryImpl.result;if(!(result instanceof Response)){_context10.next=7;break;}return _context10.abrupt(\"return\",result);case 7:return _context10.abrupt(\"return\",_extends({location:location},result));case 8:case\"end\":return _context10.stop();}}},_callee10);}));return _query.apply(this,arguments);}function queryRoute(_x37,_x38){return _queryRoute.apply(this,arguments);}function _queryRoute(){_queryRoute=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(request,routeId){var _yield$queryImpl2,result,error,routeData,value;return _regeneratorRuntime().wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:_context11.next=2;return queryImpl(request,routeId);case 2:_yield$queryImpl2=_context11.sent;result=_yield$queryImpl2.result;if(!(result instanceof Response)){_context11.next=6;break;}return _context11.abrupt(\"return\",result);case 6:error=result.errors?Object.values(result.errors)[0]:undefined;if(!(error!==undefined)){_context11.next=11;break;}if(!isRouteErrorResponse(error)){_context11.next=10;break;}return _context11.abrupt(\"return\",new Response(error.data,{status:error.status,statusText:error.statusText}));case 10:throw error;case 11:// Pick off the right state value to return\nrouteData=[result.actionData,result.loaderData].find(function(v){return v;});value=Object.values(routeData||{})[0];if(!isRouteErrorResponse(value)){_context11.next=15;break;}return _context11.abrupt(\"return\",new Response(value.data,{status:value.status,statusText:value.statusText}));case 15:return _context11.abrupt(\"return\",value);case 16:case\"end\":return _context11.stop();}}},_callee11);}));return _queryRoute.apply(this,arguments);}function queryImpl(_x39,_x40){return _queryImpl.apply(this,arguments);}function _queryImpl(){_queryImpl=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12(request,routeId){var _matchRequest,location,matches,shortCircuitState,_result,result;return _regeneratorRuntime().wrap(function _callee12$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:invariant(request.method!==\"HEAD\",\"query()/queryRoute() do not support HEAD requests\");invariant(request.signal,\"query()/queryRoute() requests must contain an AbortController signal\");_matchRequest=matchRequest(request,routeId),location=_matchRequest.location,matches=_matchRequest.matches,shortCircuitState=_matchRequest.shortCircuitState;_context12.prev=3;if(!shortCircuitState){_context12.next=6;break;}return _context12.abrupt(\"return\",{location:location,result:shortCircuitState});case 6:if(!(request.method!==\"GET\")){_context12.next=11;break;}_context12.next=9;return submit(request,matches,getTargetMatch(matches,location),routeId!=null);case 9:_result=_context12.sent;return _context12.abrupt(\"return\",{location:location,result:_result});case 11:_context12.next=13;return loadRouteData(request,matches,routeId!=null);case 13:result=_context12.sent;return _context12.abrupt(\"return\",{location:location,result:_extends({},result,{actionData:null,actionHeaders:{}})});case 17:_context12.prev=17;_context12.t0=_context12[\"catch\"](3);if(!(_context12.t0 instanceof Response)){_context12.next=21;break;}return _context12.abrupt(\"return\",{location:location,result:_context12.t0});case 21:throw _context12.t0;case 22:case\"end\":return _context12.stop();}}},_callee12,null,[[3,17]]);}));return _queryImpl.apply(this,arguments);}function submit(_x41,_x42,_x43,_x44){return _submit.apply(this,arguments);}function _submit(){_submit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee13(request,matches,actionMatch,isRouteRequest){var result,href,method,boundaryMatch,_boundaryMatch,_context13,context;return _regeneratorRuntime().wrap(function _callee13$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:if(actionMatch.route.action){_context14.next=5;break;}href=createHref(new URL(request.url));result=getMethodNotAllowedResult(href);_context14.next=11;break;case 5:_context14.next=7;return callLoaderOrAction(\"action\",request,actionMatch,true,isRouteRequest);case 7:result=_context14.sent;if(!request.signal.aborted){_context14.next=11;break;}method=isRouteRequest?\"queryRoute\":\"query\";throw new Error(method+\"() call aborted\");case 11:if(!isRedirectResult(result)){_context14.next=13;break;}throw new Response(null,{status:result.status,headers:{Location:result.location}});case 13:if(!isDeferredResult(result)){_context14.next=15;break;}throw new Error(\"defer() is not supported in actions\");case 15:if(!isRouteRequest){_context14.next=20;break;}if(!isErrorResult(result)){_context14.next=19;break;}boundaryMatch=findNearestBoundary(matches,actionMatch.route.id);return _context14.abrupt(\"return\",{matches:[actionMatch],loaderData:{},actionData:null,errors:_defineProperty({},boundaryMatch.route.id,result.error),// Note: statusCode + headers are unused here since queryRoute will\n// return the raw Response or value\nstatusCode:500,loaderHeaders:{},actionHeaders:{}});case 19:return _context14.abrupt(\"return\",{matches:[actionMatch],loaderData:{},actionData:_defineProperty({},actionMatch.route.id,result.data),errors:null,// Note: statusCode + headers are unused here since queryRoute will\n// return the raw Response or value\nstatusCode:200,loaderHeaders:{},actionHeaders:{}});case 20:if(!isErrorResult(result)){_context14.next=26;break;}// Store off the pending error - we use it to determine which loaders\n// to call and will commit it when we complete the navigation\n_boundaryMatch=findNearestBoundary(matches,actionMatch.route.id);_context14.next=24;return loadRouteData(request,matches,isRouteRequest,_defineProperty({},_boundaryMatch.route.id,result.error));case 24:_context13=_context14.sent;return _context14.abrupt(\"return\",_extends({},_context13,{statusCode:isRouteErrorResponse(result.error)?result.error.status:500,actionData:null,actionHeaders:_extends({},result.headers?_defineProperty({},actionMatch.route.id,result.headers):{})}));case 26:_context14.next=28;return loadRouteData(request,matches,isRouteRequest);case 28:context=_context14.sent;return _context14.abrupt(\"return\",_extends({},context,result.statusCode?{statusCode:result.statusCode}:{},{actionData:_defineProperty({},actionMatch.route.id,result.data),actionHeaders:_extends({},result.headers?_defineProperty({},actionMatch.route.id,result.headers):{})}));case 30:case\"end\":return _context14.stop();}}},_callee13);}));return _submit.apply(this,arguments);}function loadRouteData(_x45,_x46,_x47,_x48){return _loadRouteData.apply(this,arguments);}function _loadRouteData(){_loadRouteData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee14(request,matches,isRouteRequest,pendingActionError){var matchesToLoad,results,method,context;return _regeneratorRuntime().wrap(function _callee14$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:matchesToLoad=getLoaderMatchesUntilBoundary(matches,Object.keys(pendingActionError||{})[0]).filter(function(m){return m.route.loader;});// Short circuit if we have no loaders to run\nif(!(matchesToLoad.length===0)){_context15.next=3;break;}return _context15.abrupt(\"return\",{matches:matches,loaderData:{},errors:pendingActionError||null,statusCode:200,loaderHeaders:{}});case 3:_context15.next=5;return Promise.all(_toConsumableArray(matchesToLoad.map(function(m){return callLoaderOrAction(\"loader\",request,m,true,isRouteRequest);})));case 5:results=_context15.sent;if(!request.signal.aborted){_context15.next=9;break;}method=isRouteRequest?\"queryRoute\":\"query\";throw new Error(method+\"() call aborted\");case 9:// Can't do anything with these without the Remix side of things, so just\n// cancel them for now\nresults.forEach(function(result){if(isDeferredResult(result)){result.deferredData.cancel();}});// Process and commit output from loaders\ncontext=processRouteLoaderData(matches,matchesToLoad,results,pendingActionError);return _context15.abrupt(\"return\",_extends({},context,{matches:matches}));case 12:case\"end\":return _context15.stop();}}},_callee14);}));return _loadRouteData.apply(this,arguments);}function matchRequest(req,routeId){var url=new URL(req.url);var location=createLocation(\"\",createPath(url),null,\"default\");var matches=matchRoutes(dataRoutes,location);if(matches&&routeId){matches=matches.filter(function(m){return m.route.id===routeId;});}// Short circuit with a 404 if we match nothing\nif(!matches){var _getNotFoundMatches3=getNotFoundMatches(dataRoutes),notFoundMatches=_getNotFoundMatches3.matches,route=_getNotFoundMatches3.route,error=_getNotFoundMatches3.error;return{location:location,matches:notFoundMatches,shortCircuitState:{matches:notFoundMatches,loaderData:{},actionData:null,errors:_defineProperty({},route.id,error),statusCode:404,loaderHeaders:{},actionHeaders:{}}};}return{location:location,matches:matches};}return{dataRoutes:dataRoutes,query:query,queryRoute:queryRoute};}//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */function getStaticContextFromError(routes,context,error){var newContext=_extends({},context,{statusCode:500,errors:_defineProperty({},context._deepestRenderedBoundaryId||routes[0].id,error)});return newContext;}// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(to,opts,isFetcher){if(isFetcher===void 0){isFetcher=false;}var path=typeof to===\"string\"?to:createPath(to);// Return location verbatim on non-submission navigations\nif(!opts||!(\"formMethod\"in opts)&&!(\"formData\"in opts)){return{path:path};}// Create a Submission on non-GET navigations\nif(opts.formMethod!=null&&opts.formMethod!==\"get\"){return{path:path,submission:{formMethod:opts.formMethod,formAction:createHref(parsePath(path)),formEncType:opts&&opts.formEncType||\"application/x-www-form-urlencoded\",formData:opts.formData}};}// No formData to flatten for GET submission\nif(!opts.formData){return{path:path};}// Flatten submission onto URLSearchParams for GET submissions\nvar parsedPath=parsePath(path);try{var searchParams=convertFormDataToSearchParams(opts.formData);// Since fetcher GET submissions only run a single loader (as opposed to\n// navigation GET submissions which run all loaders), we need to preserve\n// any incoming ?index params\nif(isFetcher&&parsedPath.search&&hasNakedIndexQuery(parsedPath.search)){searchParams.append(\"index\",\"\");}parsedPath.search=\"?\"+searchParams;}catch(e){return{path:path,error:new ErrorResponse(400,\"Bad Request\",\"Cannot submit binary form data using GET\")};}return{path:createPath(parsedPath)};}function getLoaderRedirect(state,redirect){var _state$navigation=state.navigation,formMethod=_state$navigation.formMethod,formAction=_state$navigation.formAction,formEncType=_state$navigation.formEncType,formData=_state$navigation.formData;var navigation={state:\"loading\",location:createLocation(state.location,redirect.location),formMethod:formMethod||undefined,formAction:formAction||undefined,formEncType:formEncType||undefined,formData:formData||undefined};return navigation;}// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches,boundaryId){var boundaryMatches=matches;if(boundaryId){var index=matches.findIndex(function(m){return m.route.id===boundaryId;});if(index>=0){boundaryMatches=matches.slice(0,index);}}return boundaryMatches;}function getMatchesToLoad(state,matches,submission,location,isRevalidationRequired,cancelledDeferredRoutes,cancelledFetcherLoads,pendingActionData,pendingError,fetchLoadMatches){var actionResult=pendingError?Object.values(pendingError)[0]:pendingActionData?Object.values(pendingActionData)[0]:null;// Pick navigation matches that are net-new or qualify for revalidation\nvar boundaryId=pendingError?Object.keys(pendingError)[0]:undefined;var boundaryMatches=getLoaderMatchesUntilBoundary(matches,boundaryId);var navigationMatches=boundaryMatches.filter(function(match,index){return match.route.loader!=null&&(isNewLoader(state.loaderData,state.matches[index],match)||// If this route had a pending deferred cancelled it must be revalidated\ncancelledDeferredRoutes.some(function(id){return id===match.route.id;})||shouldRevalidateLoader(state.location,state.matches[index],submission,location,match,isRevalidationRequired,actionResult));});// Pick fetcher.loads that need to be revalidated\nvar revalidatingFetchers=[];fetchLoadMatches&&fetchLoadMatches.forEach(function(_ref10,key){var _ref24=_slicedToArray(_ref10,2),href=_ref24[0],match=_ref24[1];// This fetcher was cancelled from a prior action submission - force reload\nif(cancelledFetcherLoads.includes(key)){revalidatingFetchers.push([key,href,match]);}else if(isRevalidationRequired){var shouldRevalidate=shouldRevalidateLoader(href,match,submission,href,match,isRevalidationRequired,actionResult);if(shouldRevalidate){revalidatingFetchers.push([key,href,match]);}}});return[navigationMatches,revalidatingFetchers];}function isNewLoader(currentLoaderData,currentMatch,match){var isNew=// [a] -> [a, b]\n!currentMatch||// [a, b] -> [a, c]\nmatch.route.id!==currentMatch.route.id;// Handle the case that we don't have data for a re-used route, potentially\n// from a prior error or from a cancelled pending deferred\nvar isMissingData=currentLoaderData[match.route.id]===undefined;// Always load if this is a net-new route or we don't yet have data\nreturn isNew||isMissingData;}function isNewRouteInstance(currentMatch,match){var currentPath=currentMatch.route.path;return(// param change for this match, /users/123 -> /users/456\ncurrentMatch.pathname!==match.pathname||// splat param changed, which is not present in match.path\n// e.g. /files/images/avatar.jpg -> files/finances.xls\ncurrentPath&&currentPath.endsWith(\"*\")&&currentMatch.params[\"*\"]!==match.params[\"*\"]);}function shouldRevalidateLoader(currentLocation,currentMatch,submission,location,match,isRevalidationRequired,actionResult){var currentUrl=createURL(currentLocation);var currentParams=currentMatch.params;var nextUrl=createURL(location);var nextParams=match.params;// This is the default implementation as to when we revalidate.  If the route\n// provides it's own implementation, then we give them full control but\n// provide this value so they can leverage it if needed after they check\n// their own specific use cases\n// Note that fetchers always provide the same current/next locations so the\n// URL-based checks here don't apply to fetcher shouldRevalidate calls\nvar defaultShouldRevalidate=isNewRouteInstance(currentMatch,match)||// Clicked the same link, resubmitted a GET form\ncurrentUrl.toString()===nextUrl.toString()||// Search params affect all loaders\ncurrentUrl.search!==nextUrl.search||// Forced revalidation due to submission, useRevalidate, or X-Remix-Revalidate\nisRevalidationRequired;if(match.route.shouldRevalidate){var routeChoice=match.route.shouldRevalidate(_extends({currentUrl:currentUrl,currentParams:currentParams,nextUrl:nextUrl,nextParams:nextParams},submission,{actionResult:actionResult,defaultShouldRevalidate:defaultShouldRevalidate}));if(typeof routeChoice===\"boolean\"){return routeChoice;}}return defaultShouldRevalidate;}function callLoaderOrAction(_x49,_x50,_x51,_x52,_x53){return _callLoaderOrAction.apply(this,arguments);}function _callLoaderOrAction(){_callLoaderOrAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee15(type,request,match,skipRedirects,isRouteRequest){var resultType,result,reject,abortPromise,onReject,handler,status,location,data,contentType;return _regeneratorRuntime().wrap(function _callee15$(_context16){while(1){switch(_context16.prev=_context16.next){case 0:if(skipRedirects===void 0){skipRedirects=false;}if(isRouteRequest===void 0){isRouteRequest=false;}abortPromise=new Promise(function(_,r){return reject=r;});onReject=function onReject(){return reject();};request.signal.addEventListener(\"abort\",onReject);_context16.prev=5;handler=match.route[type];invariant(handler,\"Could not find the \"+type+\" to run on the \\\"\"+match.route.id+\"\\\" route\");_context16.next=10;return Promise.race([handler({request:request,params:match.params}),abortPromise]);case 10:result=_context16.sent;_context16.next=17;break;case 13:_context16.prev=13;_context16.t0=_context16[\"catch\"](5);resultType=ResultType.error;result=_context16.t0;case 17:_context16.prev=17;request.signal.removeEventListener(\"abort\",onReject);return _context16.finish(17);case 20:if(!(result instanceof Response)){_context16.next=42;break;}// Process redirects\nstatus=result.status;location=result.headers.get(\"Location\");// For SSR single-route requests, we want to hand Responses back directly\n// without unwrapping\nif(!isRouteRequest){_context16.next=25;break;}throw result;case 25:if(!(status>=300&&status<=399&&location!=null)){_context16.next=29;break;}if(!skipRedirects){_context16.next=28;break;}throw result;case 28:return _context16.abrupt(\"return\",{type:ResultType.redirect,status:status,location:location,revalidate:result.headers.get(\"X-Remix-Revalidate\")!==null});case 29:contentType=result.headers.get(\"Content-Type\");if(!(contentType&&contentType.startsWith(\"application/json\"))){_context16.next=36;break;}_context16.next=33;return result.json();case 33:data=_context16.sent;_context16.next=39;break;case 36:_context16.next=38;return result.text();case 38:data=_context16.sent;case 39:if(!(resultType===ResultType.error)){_context16.next=41;break;}return _context16.abrupt(\"return\",{type:resultType,error:new ErrorResponse(status,result.statusText,data),headers:result.headers});case 41:return _context16.abrupt(\"return\",{type:ResultType.data,data:data,statusCode:result.status,headers:result.headers});case 42:if(!(resultType===ResultType.error)){_context16.next=44;break;}return _context16.abrupt(\"return\",{type:resultType,error:result});case 44:if(!(result instanceof DeferredData)){_context16.next=46;break;}return _context16.abrupt(\"return\",{type:ResultType.deferred,deferredData:result});case 46:return _context16.abrupt(\"return\",{type:ResultType.data,data:result});case 47:case\"end\":return _context16.stop();}}},_callee15,null,[[5,13,17,20]]);}));return _callLoaderOrAction.apply(this,arguments);}function createRequest(location,signal,submission){var url=createURL(location).toString();var init={signal:signal};if(submission){var formMethod=submission.formMethod,formEncType=submission.formEncType,formData=submission.formData;init.method=formMethod.toUpperCase();init.body=formEncType===\"application/x-www-form-urlencoded\"?convertFormDataToSearchParams(formData):formData;}// Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\nreturn new Request(url,init);}function convertFormDataToSearchParams(formData){var searchParams=new URLSearchParams();var _iterator4=_createForOfIteratorHelper(formData.entries()),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var _step4$value=_slicedToArray(_step4.value,2),key=_step4$value[0],value=_step4$value[1];invariant(typeof value===\"string\",'File inputs are not supported with encType \"application/x-www-form-urlencoded\", '+'please use \"multipart/form-data\" instead.');searchParams.append(key,value);}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}return searchParams;}function processRouteLoaderData(matches,matchesToLoad,results,pendingError,activeDeferreds){// Fill in loaderData/errors from our loaders\nvar loaderData={};var errors=null;var statusCode;var foundError=false;var loaderHeaders={};// Process loader results into state.loaderData/state.errors\nresults.forEach(function(result,index){var id=matchesToLoad[index].route.id;invariant(!isRedirectResult(result),\"Cannot handle redirect results in processLoaderData\");if(isErrorResult(result)){// Look upwards from the matched route for the closest ancestor\n// error boundary, defaulting to the root match\nvar boundaryMatch=findNearestBoundary(matches,id);var error=result.error;// If we have a pending action error, we report it at the highest-route\n// that throws a loader error, and then clear it out to indicate that\n// it was consumed\nif(pendingError){error=Object.values(pendingError)[0];pendingError=undefined;}errors=Object.assign(errors||{},_defineProperty({},boundaryMatch.route.id,error));// Once we find our first (highest) error, we set the status code and\n// prevent deeper status codes from overriding\nif(!foundError){foundError=true;statusCode=isRouteErrorResponse(result.error)?result.error.status:500;}if(result.headers){loaderHeaders[id]=result.headers;}}else if(isDeferredResult(result)){activeDeferreds&&activeDeferreds.set(id,result.deferredData);loaderData[id]=result.deferredData.data;// TODO: Add statusCode/headers once we wire up streaming in Remix\n}else{loaderData[id]=result.data;// Error status codes always override success status codes, but if all\n// loaders are successful we take the deepest status code.\nif(result.statusCode!=null&&result.statusCode!==200&&!foundError){statusCode=result.statusCode;}if(result.headers){loaderHeaders[id]=result.headers;}}});// If we didn't consume the pending action error (i.e., all loaders\n// resolved), then consume it here\nif(pendingError){errors=pendingError;}return{loaderData:loaderData,errors:errors,statusCode:statusCode||200,loaderHeaders:loaderHeaders};}function processLoaderData(state,matches,matchesToLoad,results,pendingError,revalidatingFetchers,fetcherResults,activeDeferreds){var _processRouteLoaderDa=processRouteLoaderData(matches,matchesToLoad,results,pendingError,activeDeferreds),loaderData=_processRouteLoaderDa.loaderData,errors=_processRouteLoaderDa.errors;// Process results from our revalidating fetchers\nfor(var index=0;index<revalidatingFetchers.length;index++){var _revalidatingFetchers=_slicedToArray(revalidatingFetchers[index],3),key=_revalidatingFetchers[0],match=_revalidatingFetchers[2];invariant(fetcherResults!==undefined&&fetcherResults[index]!==undefined,\"Did not find corresponding fetcher result\");var result=fetcherResults[index];// Process fetcher non-redirect errors\nif(isErrorResult(result)){var boundaryMatch=findNearestBoundary(state.matches,match.route.id);if(!(errors&&errors[boundaryMatch.route.id])){errors=_extends({},errors,_defineProperty({},boundaryMatch.route.id,result.error));}state.fetchers.delete(key);}else if(isRedirectResult(result)){// Should never get here, redirects should get processed above, but we\n// keep this to type narrow to a success result in the else\nthrow new Error(\"Unhandled fetcher revalidation redirect\");}else if(isDeferredResult(result)){// Should never get here, deferred data should be awaited for fetchers\n// in resolveDeferredResults\nthrow new Error(\"Unhandled fetcher deferred data\");}else{var doneFetcher={state:\"idle\",data:result.data,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined};state.fetchers.set(key,doneFetcher);}}return{loaderData:loaderData,errors:errors};}function mergeLoaderData(loaderData,newLoaderData,matches){var mergedLoaderData=_extends({},newLoaderData);matches.forEach(function(match){var id=match.route.id;if(newLoaderData[id]===undefined&&loaderData[id]!==undefined){mergedLoaderData[id]=loaderData[id];}});return mergedLoaderData;}// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches,routeId){var eligibleMatches=routeId?matches.slice(0,matches.findIndex(function(m){return m.route.id===routeId;})+1):_toConsumableArray(matches);return eligibleMatches.reverse().find(function(m){return m.route.hasErrorBoundary===true;})||matches[0];}function getNotFoundMatches(routes){// Prefer a root layout route if present, otherwise shim in a route object\nvar route=routes.find(function(r){return r.index||r.path===\"\"||r.path===\"/\";})||{id:\"__shim-404-route__\"};return{matches:[{params:{},pathname:\"\",pathnameBase:\"\",route:route}],route:route,error:new ErrorResponse(404,\"Not Found\",null)};}function getMethodNotAllowedResult(path){var href=typeof path===\"string\"?path:createHref(path);console.warn(\"You're trying to submit to a route that does not have an action.  To \"+\"fix this, please add an `action` function to the route for \"+(\"[\"+href+\"]\"));return{type:ResultType.error,error:new ErrorResponse(405,\"Method Not Allowed\",\"No action found for [\"+href+\"]\")};}// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results){for(var i=results.length-1;i>=0;i--){var result=results[i];if(isRedirectResult(result)){return result;}}}// Create an href to represent a \"server\" URL without the hash\nfunction createHref(location){return(location.pathname||\"\")+(location.search||\"\");}function isHashChangeOnly(a,b){return a.pathname===b.pathname&&a.search===b.search&&a.hash!==b.hash;}function isDeferredResult(result){return result.type===ResultType.deferred;}function isErrorResult(result){return result.type===ResultType.error;}function isRedirectResult(result){return(result&&result.type)===ResultType.redirect;}function resolveDeferredResults(_x54,_x55,_x56,_x57,_x58,_x59){return _resolveDeferredResults.apply(this,arguments);}function _resolveDeferredResults(){_resolveDeferredResults=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee16(currentMatches,matchesToLoad,results,signal,isFetcher,currentLoaderData){var _loop,index;return _regeneratorRuntime().wrap(function _callee16$(_context18){while(1){switch(_context18.prev=_context18.next){case 0:_loop=/*#__PURE__*/_regeneratorRuntime().mark(function _loop(index){var result,match,currentMatch,isRevalidatingLoader;return _regeneratorRuntime().wrap(function _loop$(_context17){while(1){switch(_context17.prev=_context17.next){case 0:result=results[index];match=matchesToLoad[index];currentMatch=currentMatches.find(function(m){return m.route.id===match.route.id;});isRevalidatingLoader=currentMatch!=null&&!isNewRouteInstance(currentMatch,match)&&(currentLoaderData&&currentLoaderData[match.route.id])!==undefined;if(!(isDeferredResult(result)&&(isFetcher||isRevalidatingLoader))){_context17.next=7;break;}_context17.next=7;return resolveDeferredData(result,signal,isFetcher).then(function(result){if(result){results[index]=result||results[index];}});case 7:case\"end\":return _context17.stop();}}},_loop);});index=0;case 2:if(!(index<results.length)){_context18.next=7;break;}return _context18.delegateYield(_loop(index),\"t0\",4);case 4:index++;_context18.next=2;break;case 7:case\"end\":return _context18.stop();}}},_callee16);}));return _resolveDeferredResults.apply(this,arguments);}function resolveDeferredData(_x60,_x61,_x62){return _resolveDeferredData.apply(this,arguments);}function _resolveDeferredData(){_resolveDeferredData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee17(result,signal,unwrap){var aborted;return _regeneratorRuntime().wrap(function _callee17$(_context19){while(1){switch(_context19.prev=_context19.next){case 0:if(unwrap===void 0){unwrap=false;}_context19.next=3;return result.deferredData.resolveData(signal);case 3:aborted=_context19.sent;if(!aborted){_context19.next=6;break;}return _context19.abrupt(\"return\");case 6:if(!unwrap){_context19.next=14;break;}_context19.prev=7;return _context19.abrupt(\"return\",{type:ResultType.data,data:result.deferredData.unwrappedData});case 11:_context19.prev=11;_context19.t0=_context19[\"catch\"](7);return _context19.abrupt(\"return\",{type:ResultType.error,error:_context19.t0});case 14:return _context19.abrupt(\"return\",{type:ResultType.data,data:result.deferredData.data});case 15:case\"end\":return _context19.stop();}}},_callee17,null,[[7,11]]);}));return _resolveDeferredData.apply(this,arguments);}function hasNakedIndexQuery(search){return new URLSearchParams(search).getAll(\"index\").some(function(v){return v===\"\";});}// Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\nfunction createUseMatchesMatch(match,loaderData){var route=match.route,pathname=match.pathname,params=match.params;return{id:route.id,pathname:pathname,params:params,data:loaderData[route.id],handle:route.handle};}function getTargetMatch(matches,location){var search=typeof location===\"string\"?parsePath(location).search:location.search;if(matches[matches.length-1].route.index&&!hasNakedIndexQuery(search||\"\")){return matches.slice(-2)[0];}return matches.slice(-1)[0];}function createURL(location){var base=typeof window!==\"undefined\"&&typeof window.location!==\"undefined\"?window.location.origin:\"unknown://unknown\";var href=typeof location===\"string\"?location:createHref(location);return new URL(href,base);}//#endregion\nexport{AbortedDeferredError,Action,ErrorResponse,IDLE_FETCHER,IDLE_NAVIGATION,convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes,createBrowserHistory,createHashHistory,createMemoryHistory,createPath,createRouter,defer,generatePath,getStaticContextFromError,getToPathname,invariant,isRouteErrorResponse,joinPaths,json,matchPath,matchRoutes,normalizePathname,parsePath,redirect,resolvePath,resolveTo,stripBasename,unstable_createStaticHandler,warning};","map":{"version":3,"mappings":"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","names":["Action","PopStateEventType","options","initialEntries","initialIndex","v5Compat","entries","map","entry","index","createMemoryLocation","state","undefined","clampIndex","length","action","Pop","listener","n","Math","min","max","getCurrentLocation","to","key","location","createLocation","pathname","warning","charAt","JSON","stringify","history","createHref","createPath","push","Push","nextLocation","splice","replace","Replace","go","delta","listen","fn","createBrowserLocation","window","globalHistory","search","hash","usr","createBrowserHref","getUrlBasedHistory","createHashLocation","parsePath","substr","createHashHref","base","document","querySelector","href","getAttribute","url","hashIndex","indexOf","slice","validateHashLocation","cond","message","console","warn","Error","e","createKey","random","toString","getHistoryState","current","_ref","path","parsedPath","searchIndex","getLocation","validateLocation","defaultView","handlePop","historyState","pushState","error","assign","replaceState","addEventListener","removeEventListener","ResultType","isIndexRoute","route","convertRoutesToDataRoutes","routes","parentPath","allIds","Set","treePath","id","join","invariant","children","has","add","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","i","matchRouteBranch","parentsMeta","forEach","meta","relativePath","caseSensitive","childrenIndex","startsWith","joinPaths","routesMeta","concat","score","computeScore","sort","a","b","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","segments","split","initialScore","some","filter","reduce","segment","test","siblings","every","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","Object","params","pathnameBase","normalizePathname","generatePath","_","prefix","__","str","star","pattern","compilePath","matcher","paramNames","captureGroups","memo","paramName","splatValue","safelyDecodeURIComponent","endsWith","regexpSource","RegExp","value","decodeURIComponent","toLowerCase","startIndex","nextChar","resolvePath","fromPathname","toPathname","resolvePathname","normalizeSearch","normalizeHash","relativeSegments","pop","getInvalidPathError","char","field","dest","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","includes","isEmptyPath","from","routePathnameIndex","toSegments","shift","hasExplicitTrailingSlash","hasCurrentTrailingSlash","getToPathname","paths","json","data","init","responseInit","status","headers","Headers","set","Response","AbortedDeferredError","DeferredData","constructor","subscriber","Array","isArray","reject","abortPromise","Promise","r","controller","AbortController","onAbort","unlistenAbortSignal","signal","acc","trackPromise","pendingKeys","promise","race","then","onSettle","catch","defineProperty","get","aborted","delete","done","subscribe","cancel","abort","v","k","resolve","size","unwrapTrackedPromise","isTrackedPromise","_tracked","_error","_data","defer","redirect","ErrorResponse","statusText","isRouteErrorResponse","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","IDLE_FETCHER","createRouter","dataRoutes","unlistenHistory","subscribers","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","initialMatches","initialErrors","getNotFoundMatches","initialized","m","loader","hydrationData","router","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","loaderData","actionData","errors","fetchers","Map","pendingAction","HistoryAction","pendingPreventScrollReset","pendingNavigationController","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeDeferreds","initialize","startNavigation","dispose","clear","deleteFetcher","updateState","newState","completeNavigation","isActionReload","newLoaderData","mergeLoaderData","getSavedScrollPosition","navigate","opts","normalizeNavigateOptions","submission","pendingError","revalidate","interruptActiveLoads","startUninterruptedRevalidation","overrideNavigation","saveScrollPosition","loadingNavigation","notFoundMatches","cancelActiveDeferreds","isHashChangeOnly","request","createRequest","findNearestBoundary","handleAction","actionOutput","shortCircuited","pendingActionData","pendingActionError","handleLoaders","actionMatch","getTargetMatch","result","getMethodNotAllowedResult","callLoaderOrAction","isRedirectResult","redirectNavigation","startRedirectNavigation","isErrorResult","boundaryMatch","isDeferredResult","getMatchesToLoad","matchesToLoad","revalidatingFetchers","routeId","fetcher","revalidatingFetcher","callLoadersAndMaybeResolveData","results","loaderResults","fetcherResults","findRedirect","getLoaderRedirect","processLoaderData","deferredData","markFetchRedirectsDone","didAbortFetchLoads","abortStaleFetchLoads","_extends","getFetcher","fetch","abortFetcher","setFetcherError","handleFetcherAction","handleFetcherLoader","existingFetcher","abortController","fetchRequest","actionResult","loadingFetcher","revalidationRequest","loadId","loadFetcher","staleKey","doneFetcher","resolveDeferredData","redirectHistoryAction","currentMatches","fetchersToLoad","all","resolveDeferredResults","markFetchersDone","keys","doneKeys","landedId","yeetedKeys","predicate","cancelledRouteIds","dfd","enableScrollRestoration","positions","getPosition","getKey","y","userMatches","createUseMatchesMatch","_internalFetchControllers","_internalActiveDeferreds","unstable_createStaticHandler","query","queryImpl","queryRoute","values","routeData","find","method","matchRequest","shortCircuitState","submit","loadRouteData","actionHeaders","isRouteRequest","URL","Location","statusCode","loaderHeaders","context","getLoaderMatchesUntilBoundary","processRouteLoaderData","req","getStaticContextFromError","newContext","_deepestRenderedBoundaryId","isFetcher","searchParams","convertFormDataToSearchParams","hasNakedIndexQuery","append","boundaryId","boundaryMatches","findIndex","navigationMatches","isNewLoader","shouldRevalidateLoader","shouldRevalidate","currentLoaderData","currentMatch","isNew","isMissingData","isNewRouteInstance","currentPath","currentLocation","currentUrl","createURL","currentParams","nextUrl","nextParams","defaultShouldRevalidate","routeChoice","type","skipRedirects","onReject","handler","resultType","contentType","text","deferred","toUpperCase","body","Request","URLSearchParams","foundError","mergedLoaderData","eligibleMatches","reverse","hasErrorBoundary","isRevalidatingLoader","unwrap","resolveData","unwrappedData","getAll","handle","origin"],"sources":["/home/leejungwon/BEB-06-PrivateSea/src/node_modules/@remix-run/router/history.ts","/home/leejungwon/BEB-06-PrivateSea/src/node_modules/@remix-run/router/utils.ts","/home/leejungwon/BEB-06-PrivateSea/src/node_modules/@remix-run/router/router.ts"],"sourcesContent":["////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: any;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. May be either a URL or the pieces of a\n * URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref(to) {\n      return typeof to === \"string\" ? to : createPath(to);\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      index = clampIndex(index + delta);\n      if (listener) {\n        listener({ action, location: getCurrentLocation() });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\nfunction warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function handlePop() {\n    action = Action.Pop;\n    if (listener) {\n      listener({ action, location: history.location });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    let historyState = getHistoryState(location);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    let historyState = getHistoryState(location);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: location });\n    }\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { parsePath } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\nexport type FormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\";\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport interface Submission {\n  formMethod: Exclude<FormMethod, \"get\">;\n  formAction: string;\n  formEncType: FormEncType;\n  formData: FormData;\n}\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs {\n  request: Request;\n  params: Params;\n}\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Route loader function signature\n */\nexport interface LoaderFunction {\n  (args: LoaderFunctionArgs): Promise<Response> | Response | Promise<any> | any;\n}\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction {\n  (args: ActionFunctionArgs): Promise<Response> | Response | Promise<any> | any;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: {\n    currentUrl: URL;\n    currentParams: AgnosticDataRouteMatch[\"params\"];\n    nextUrl: URL;\n    nextParams: AgnosticDataRouteMatch[\"params\"];\n    formMethod?: Submission[\"formMethod\"];\n    formAction?: Submission[\"formAction\"];\n    formEncType?: Submission[\"formEncType\"];\n    formData?: Submission[\"formData\"];\n    actionResult?: DataResult;\n    defaultShouldRevalidate: boolean;\n  }): boolean;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `${string}:${infer Param}`\n    ? Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\ntype PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  parentPath: number[] = [],\n  allIds: Set<string> = new Set<string>()\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !allIds.has(id),\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n    allIds.add(id);\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = { ...route, id };\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        id,\n        children: route.children\n          ? convertRoutesToDataRoutes(route.children, treePath, allIds)\n          : undefined,\n      };\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch<string, RouteObjectType>(branches[i], pathname);\n  }\n\n  return matches;\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  routes.forEach((route, index) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({ path, score: computeScore(path, route.index), routesMeta });\n  });\n\n  return branches;\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  path: Path,\n  params: {\n    [key in PathParam<Path>]: string;\n  } = {} as any\n): string {\n  return path\n    .replace(/:(\\w+)/g, (_, key: PathParam<Path>) => {\n      invariant(params[key] != null, `Missing \":${key}\" param`);\n      return params[key]!;\n    })\n    .replace(/(\\/?)\\*/, (_, prefix, __, str) => {\n      const star = \"*\" as PathParam<Path>;\n\n      if (params[star] == null) {\n        // If no splat was provided, trim the trailing slash _unless_ it's\n        // the entire path\n        return str === \"/*\" ? \"/\" : \"\";\n      }\n\n      // Apply the splat\n      return `${prefix}${params[star]}`;\n    });\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\n/**\n * @private\n */\nexport function warning(cond: any, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeys: Set<string | number> = new Set<string | number>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscriber?: (aborted: boolean) => void = undefined;\n  data: Record<string, unknown>;\n\n  constructor(data: Record<string, unknown>) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n  }\n\n  private trackPromise(\n    key: string | number,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.pendingKeys.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, null, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string | number,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeys.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    const subscriber = this.subscriber;\n    if (error) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      subscriber && subscriber(false);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    subscriber && subscriber(false);\n    return data;\n  }\n\n  subscribe(fn: (aborted: boolean) => void) {\n    this.subscriber = fn;\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeys.forEach((v, k) => this.pendingKeys.delete(k));\n    let subscriber = this.subscriber;\n    subscriber && subscriber(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeys.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport function defer(data: Record<string, unknown>) {\n  return new DeferredData(data);\n}\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nexport class ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n\n  constructor(status: number, statusText: string | undefined, data: any) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.data = data;\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response throw from an action/loader\n */\nexport function isRouteErrorResponse(e: any): e is ErrorResponse {\n  return e instanceof ErrorResponse;\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  parsePath,\n} from \"./history\";\nimport type {\n  DataResult,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DeferredResult,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  RedirectResult,\n  RouteData,\n  AgnosticRouteObject,\n  Submission,\n  SuccessResult,\n  AgnosticRouteMatch,\n} from \"./utils\";\nimport {\n  DeferredData,\n  ErrorResponse,\n  ResultType,\n  convertRoutesToDataRoutes,\n  invariant,\n  isRouteErrorResponse,\n  matchRoutes,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): void;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To, opts?: RouterNavigateOptions): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string,\n    opts?: RouterNavigateOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key?: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key?: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  basename?: string;\n  routes: AgnosticRouteObject[];\n  history: History;\n  hydrationData?: HydrationState;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(request: Request): Promise<StaticHandlerContext | Response>;\n  queryRoute(request: Request, routeId?: string): Promise<any>;\n}\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (state: RouterState): void;\n}\n\ninterface UseMatchesMatch {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: unknown;\n  handle: unknown;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UseMatchesMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\n/**\n * Options for a navigate() call for a Link navigation\n */\ntype LinkNavigateOptions = {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n};\n\n/**\n * Options for a navigate() call for a Form navigation\n */\ntype SubmissionNavigateOptions = {\n  replace?: boolean;\n  state?: any;\n  formMethod?: FormMethod;\n  formEncType?: FormEncType;\n  formData: FormData;\n};\n\n/**\n * Options to pass to navigate() for either a Link or Form navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions =\n  | Omit<LinkNavigateOptions, \"replace\">\n  | Omit<SubmissionNavigateOptions, \"replace\">;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    data: TData | undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n    data: TData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n    data: TData | undefined;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Error thrown from the current action, keyed by the route containing the\n   * error boundary to render the error.  To be committed to the state after\n   * loaders have completed\n   */\n  pendingActionError?: RouteData;\n  /**\n   * Data returned from the current action, keyed by the route owning the action.\n   * To be committed to the state after loaders have completed\n   */\n  pendingActionData?: RouteData;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Tuple of [key, href, DataRouterMatch] for a revalidating fetcher.load()\n */\ntype RevalidatingFetcher = [string, string, AgnosticDataRouteMatch];\n\n/**\n * Tuple of [href, DataRouteMatch] for an active fetcher.load()\n */\ntype FetchLoadMatch = [string, AgnosticDataRouteMatch];\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let dataRoutes = convertRoutesToDataRoutes(init.routes);\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  let initialScrollRestored = false;\n\n  let initialMatches = matchRoutes(\n    dataRoutes,\n    init.history.location,\n    init.basename\n  );\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let { matches, route, error } = getNotFoundMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  let initialized =\n    !initialMatches.some((m) => m.route.loader) || init.hydrationData != null;\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    restoreScrollPosition: null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidate()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n  // Fetchers that triggered redirect navigations from their actions\n  let fetchRedirectIds = new Set<string>();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location }) =>\n        startNavigation(historyAction, location)\n    );\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location);\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(newState: Partial<RouterState>): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n    subscribers.forEach((subscriber) => subscriber(state));\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a submission\n    // - We're past the submitting state and into the loading state\n    // - The location we've finished loading is different from the submission\n    //   location, indicating we redirected from the action (avoids false\n    //   positives for loading/submissionRedirect when actionData returned\n    //   on a prior submission)\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      state.navigation.state === \"loading\" &&\n      state.navigation.formAction?.split(\"?\")[0] === location.pathname;\n\n    // Always preserve any existing loaderData from re-used routes\n    let newLoaderData = newState.loaderData\n      ? {\n          loaderData: mergeLoaderData(\n            state.loaderData,\n            newState.loaderData,\n            newState.matches || []\n          ),\n        }\n      : {};\n\n    updateState({\n      // Clear existing actionData on any completed navigation beyond the original\n      // action, unless we're currently finishing the loading/actionReload state.\n      // Do this prior to spreading in newState in case we got back to back actions\n      ...(isActionReload ? {} : { actionData: null }),\n      ...newState,\n      ...newLoaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      // Don't restore on submission navigations\n      restoreScrollPosition: state.navigation.formData\n        ? false\n        : getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset: pendingPreventScrollReset,\n    });\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(to, opts);\n\n    let location = createLocation(state.location, path, opts && opts.state);\n    let historyAction =\n      (opts && opts.replace) === true || submission != null\n        ? HistoryAction.Replace\n        : HistoryAction.Push;\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    return await startNavigation(historyAction, location, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      submission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponse;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(dataRoutes, location, init.basename);\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let {\n        matches: notFoundMatches,\n        route,\n        error,\n      } = getNotFoundMatches(dataRoutes);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error,\n        },\n      });\n      return;\n    }\n\n    // Short circuit if it's only a hash change\n    if (isHashChangeOnly(state.location, location)) {\n      completeNavigation(location, { matches });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createRequest(\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionData: RouteData | undefined;\n    let pendingError: RouteData | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError,\n      };\n    } else if (opts && opts.submission) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        { replace: opts.replace }\n      );\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        ...opts.submission,\n      };\n      loadingNavigation = navigation;\n    }\n\n    // Call loaders\n    let { shortCircuited, loaderData, errors } = await handleLoaders(\n      request,\n      location,\n      matches,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.replace,\n      pendingActionData,\n      pendingError\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches,\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    opts?: { replace?: boolean }\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation: NavigationStates[\"Submitting\"] = {\n      state: \"submitting\",\n      location,\n      ...submission,\n    };\n    updateState({ navigation });\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action) {\n      result = getMethodNotAllowedResult(location);\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch);\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let redirectNavigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location: createLocation(state.location, result.location),\n        ...submission,\n      };\n      await startRedirectNavigation(\n        result,\n        redirectNavigation,\n        opts && opts.replace\n      );\n      return { shortCircuited: true };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        pendingActionError: { [boundaryMatch.route.id]: result.error },\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw new Error(\"defer() is not supported in actions\");\n    }\n\n    return {\n      pendingActionData: { [actionMatch.route.id]: result.data },\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    replace?: boolean,\n    pendingActionData?: RouteData,\n    pendingError?: RouteData\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation;\n    if (!loadingNavigation) {\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n      };\n      loadingNavigation = navigation;\n    }\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      state,\n      matches,\n      submission,\n      location,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      pendingActionData,\n      pendingError,\n      fetchLoadMatches\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      completeNavigation(location, {\n        matches,\n        loaderData: mergeLoaderData(state.loaderData, {}, matches),\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null,\n        actionData: pendingActionData || null,\n      });\n      return { shortCircuited: true };\n    }\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach(([key]) => {\n        const fetcher = state.fetchers.get(key);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: fetcher && fetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n        };\n        state.fetchers.set(key, revalidatingFetcher);\n      });\n      updateState({\n        navigation: loadingNavigation,\n        actionData: pendingActionData || state.actionData || null,\n        ...(revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n    }\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n    revalidatingFetchers.forEach(([key]) =>\n      fetchControllers.set(key, pendingNavigationController!)\n    );\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    revalidatingFetchers.forEach(([key]) => fetchControllers.delete(key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      let redirectNavigation = getLoaderRedirect(state, redirect);\n      await startRedirectNavigation(redirect, redirectNavigation, replace);\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingError,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n\n    return {\n      loaderData,\n      errors,\n      ...(didAbortFetchLoads || revalidatingFetchers.length > 0\n        ? { fetchers: new Map(state.fetchers) }\n        : {}),\n    };\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string,\n    opts?: RouterFetchOptions\n  ) {\n    if (typeof AbortController === \"undefined\") {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n\n    let matches = matchRoutes(dataRoutes, href, init.basename);\n    if (!matches) {\n      setFetcherError(key, routeId, new ErrorResponse(404, \"Not Found\", null));\n      return;\n    }\n\n    let { path, submission } = normalizeNavigateOptions(href, opts, true);\n    let match = getTargetMatch(matches, path);\n\n    if (submission) {\n      handleFetcherAction(key, routeId, path, match, submission);\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, [path, match]);\n    handleFetcherLoader(key, routeId, path, match);\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action) {\n      let { error } = getMethodNotAllowedResult(path);\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher: FetcherStates[\"Submitting\"] = {\n      state: \"submitting\",\n      ...submission,\n      data: existingFetcher && existingFetcher.data,\n    };\n    state.fetchers.set(key, fetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createRequest(path, abortController.signal, submission);\n    fetchControllers.set(key, abortController);\n\n    let actionResult = await callLoaderOrAction(\"action\", fetchRequest, match);\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      fetchRedirectIds.add(key);\n      let loadingFetcher: FetcherStates[\"Loading\"] = {\n        state: \"loading\",\n        ...submission,\n        data: undefined,\n      };\n      state.fetchers.set(key, loadingFetcher);\n      updateState({ fetchers: new Map(state.fetchers) });\n\n      let redirectNavigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location: createLocation(state.location, actionResult.location),\n        ...submission,\n      };\n      await startRedirectNavigation(actionResult, redirectNavigation);\n      return;\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      invariant(false, \"defer() is not supported in actions\");\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createRequest(\n      nextLocation,\n      abortController.signal\n    );\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(dataRoutes, state.navigation.location, init.basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      data: actionResult.data,\n      ...submission,\n    };\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      state,\n      matches,\n      submission,\n      nextLocation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      { [match.route.id]: actionResult.data },\n      undefined, // No need to send through errors since we short circuit above\n      fetchLoadMatches\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter(([staleKey]) => staleKey !== key)\n      .forEach(([staleKey]) => {\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: existingFetcher && existingFetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n        };\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        fetchControllers.set(staleKey, abortController);\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(([staleKey]) =>\n      fetchControllers.delete(staleKey)\n    );\n\n    let redirect = findRedirect(results);\n    if (redirect) {\n      let redirectNavigation = getLoaderRedirect(state, redirect);\n      await startRedirectNavigation(redirect, redirectNavigation);\n      return;\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    let doneFetcher: FetcherStates[\"Idle\"] = {\n      state: \"idle\",\n      data: actionResult.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n    };\n    state.fetchers.set(key, doneFetcher);\n\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches),\n        ...(didAbortFetchLoads ? { fetchers: new Map(state.fetchers) } : {}),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      data: existingFetcher && existingFetcher.data,\n    };\n    state.fetchers.set(key, loadingFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createRequest(path, abortController.signal);\n    fetchControllers.set(key, abortController);\n    let result: DataResult = await callLoaderOrAction(\n      \"loader\",\n      fetchRequest,\n      match\n    );\n\n    // Deferred isn't supported or fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by ou our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      let redirectNavigation = getLoaderRedirect(state, result);\n      await startRedirectNavigation(result, redirectNavigation);\n      return;\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error,\n        },\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    let doneFetcher: FetcherStates[\"Idle\"] = {\n      state: \"idle\",\n      data: result.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n    };\n    state.fetchers.set(key, doneFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    redirect: RedirectResult,\n    navigation: Navigation,\n    replace?: boolean\n  ) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n    invariant(\n      navigation.location,\n      \"Expected a location on the redirect navigation\"\n    );\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n    await startNavigation(redirectHistoryAction, navigation.location, {\n      overrideNavigation: navigation,\n    });\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([\n      ...matchesToLoad.map((m) => callLoaderOrAction(\"loader\", request, m)),\n      ...fetchersToLoad.map(([, href, match]) =>\n        callLoaderOrAction(\"loader\", createRequest(href, request.signal), match)\n      ),\n    ]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        request.signal,\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map(([, , match]) => match),\n        fetcherResults,\n        request.signal,\n        true\n      ),\n    ]);\n\n    return { results, loaderResults, fetcherResults };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key: string, routeId: string, error: any) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error,\n      },\n      fetchers: new Map(state.fetchers),\n    });\n  }\n\n  function deleteFetcher(key: string): void {\n    if (fetchControllers.has(key)) abortFetcher(key);\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: fetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): void {\n    let doneKeys = [];\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n      }\n    }\n    markFetchersDone(doneKeys);\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || ((location) => location.key);\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  router = {\n    get basename() {\n      return init.basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    createHref,\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport function unstable_createStaticHandler(\n  routes: AgnosticRouteObject[]\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to unstable_createStaticHandler\"\n  );\n\n  let dataRoutes = convertRoutesToDataRoutes(routes);\n\n  async function query(\n    request: Request\n  ): Promise<StaticHandlerContext | Response> {\n    let { location, result } = await queryImpl(request);\n    if (result instanceof Response) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, ...result };\n  }\n\n  async function queryRoute(request: Request, routeId: string): Promise<any> {\n    let { result } = await queryImpl(request, routeId);\n    if (result instanceof Response) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // While we always re-throw Responses returned from loaders/actions\n      // directly for route requests and prevent the unwrapping into an\n      // ErrorResponse, we still need this for error cases _prior_ the\n      // execution of the loader/action, such as a 404/405 error.\n      if (isRouteErrorResponse(error)) {\n        return new Response(error.data, {\n          status: error.status,\n          statusText: error.statusText,\n        });\n      }\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    let routeData = [result.actionData, result.loaderData].find((v) => v);\n    let value = Object.values(routeData || {})[0];\n\n    if (isRouteErrorResponse(value)) {\n      return new Response(value.data, {\n        status: value.status,\n        statusText: value.statusText,\n      });\n    }\n\n    return value;\n  }\n\n  async function queryImpl(\n    request: Request,\n    routeId?: string\n  ): Promise<{\n    location: Location;\n    result: Omit<StaticHandlerContext, \"location\"> | Response;\n  }> {\n    invariant(\n      request.method !== \"HEAD\",\n      \"query()/queryRoute() do not support HEAD requests\"\n    );\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    let { location, matches, shortCircuitState } = matchRequest(\n      request,\n      routeId\n    );\n\n    try {\n      if (shortCircuitState) {\n        return { location, result: shortCircuitState };\n      }\n\n      if (request.method !== \"GET\") {\n        let result = await submit(\n          request,\n          matches,\n          getTargetMatch(matches, location),\n          routeId != null\n        );\n        return { location, result };\n      }\n\n      let result = await loadRouteData(request, matches, routeId != null);\n      return {\n        location,\n        result: {\n          ...result,\n          actionData: null,\n          actionHeaders: {},\n        },\n      };\n    } catch (e) {\n      if (e instanceof Response) {\n        return { location, result: e };\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\"> | Response> {\n    let result: DataResult;\n    if (!actionMatch.route.action) {\n      let href = createHref(new URL(request.url));\n      result = getMethodNotAllowedResult(href);\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        true,\n        isRouteRequest\n      );\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(`${method}() call aborted`);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // calLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      throw new Error(\"defer() is not supported in actions\");\n    }\n\n    if (isRouteRequest) {\n      if (isErrorResult(result)) {\n        let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n        return {\n          matches: [actionMatch],\n          loaderData: {},\n          actionData: null,\n          errors: {\n            [boundaryMatch.route.id]: result.error,\n          },\n          // Note: statusCode + headers are unused here since queryRoute will\n          // return the raw Response or value\n          statusCode: 500,\n          loaderHeaders: {},\n          actionHeaders: {},\n        };\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(request, matches, isRouteRequest, {\n        [boundaryMatch.route.id]: result.error,\n      });\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    let context = await loadRouteData(request, matches, isRouteRequest);\n\n    return {\n      ...context,\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      actionHeaders: {\n        ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n      },\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    isRouteRequest: boolean,\n    pendingActionError?: RouteData\n  ): Promise<\n    | Omit<StaticHandlerContext, \"location\" | \"actionData\" | \"actionHeaders\">\n    | Response\n  > {\n    let matchesToLoad = getLoaderMatchesUntilBoundary(\n      matches,\n      Object.keys(pendingActionError || {})[0]\n    ).filter((m) => m.route.loader);\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        loaderData: {},\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n      };\n    }\n\n    let results = await Promise.all([\n      ...matchesToLoad.map((m) =>\n        callLoaderOrAction(\"loader\", request, m, true, isRouteRequest)\n      ),\n    ]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(`${method}() call aborted`);\n    }\n\n    // Can't do anything with these without the Remix side of things, so just\n    // cancel them for now\n    results.forEach((result) => {\n      if (isDeferredResult(result)) {\n        result.deferredData.cancel();\n      }\n    });\n\n    // Process and commit output from loaders\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionError\n    );\n\n    return {\n      ...context,\n      matches,\n    };\n  }\n\n  function matchRequest(\n    req: Request,\n    routeId?: string\n  ): {\n    location: Location;\n    matches: AgnosticDataRouteMatch[];\n    routeMatch?: AgnosticDataRouteMatch;\n    shortCircuitState?: Omit<StaticHandlerContext, \"location\">;\n  } {\n    let url = new URL(req.url);\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location);\n    if (matches && routeId) {\n      matches = matches.filter((m) => m.route.id === routeId);\n    }\n\n    // Short circuit with a 404 if we match nothing\n    if (!matches) {\n      let {\n        matches: notFoundMatches,\n        route,\n        error,\n      } = getNotFoundMatches(dataRoutes);\n      return {\n        location,\n        matches: notFoundMatches,\n        shortCircuitState: {\n          matches: notFoundMatches,\n          loaderData: {},\n          actionData: null,\n          errors: {\n            [route.id]: error,\n          },\n          statusCode: 404,\n          loaderHeaders: {},\n          actionHeaders: {},\n        },\n      };\n    }\n\n    return { location, matches };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  to: To,\n  opts?: RouterNavigateOptions,\n  isFetcher = false\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponse;\n} {\n  let path = typeof to === \"string\" ? to : createPath(to);\n\n  // Return location verbatim on non-submission navigations\n  if (!opts || (!(\"formMethod\" in opts) && !(\"formData\" in opts))) {\n    return { path };\n  }\n\n  // Create a Submission on non-GET navigations\n  if (opts.formMethod != null && opts.formMethod !== \"get\") {\n    return {\n      path,\n      submission: {\n        formMethod: opts.formMethod,\n        formAction: createHref(parsePath(path)),\n        formEncType:\n          (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n        formData: opts.formData,\n      },\n    };\n  }\n\n  // No formData to flatten for GET submission\n  if (!opts.formData) {\n    return { path };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  try {\n    let searchParams = convertFormDataToSearchParams(opts.formData);\n    // Since fetcher GET submissions only run a single loader (as opposed to\n    // navigation GET submissions which run all loaders), we need to preserve\n    // any incoming ?index params\n    if (\n      isFetcher &&\n      parsedPath.search &&\n      hasNakedIndexQuery(parsedPath.search)\n    ) {\n      searchParams.append(\"index\", \"\");\n    }\n    parsedPath.search = `?${searchParams}`;\n  } catch (e) {\n    return {\n      path,\n      error: new ErrorResponse(\n        400,\n        \"Bad Request\",\n        \"Cannot submit binary form data using GET\"\n      ),\n    };\n  }\n\n  return { path: createPath(parsedPath) };\n}\n\nfunction getLoaderRedirect(\n  state: RouterState,\n  redirect: RedirectResult\n): Navigation {\n  let { formMethod, formAction, formEncType, formData } = state.navigation;\n  let navigation: NavigationStates[\"Loading\"] = {\n    state: \"loading\",\n    location: createLocation(state.location, redirect.location),\n    formMethod: formMethod || undefined,\n    formAction: formAction || undefined,\n    formEncType: formEncType || undefined,\n    formData: formData || undefined,\n  };\n  return navigation;\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId?: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  pendingActionData?: RouteData,\n  pendingError?: RouteData,\n  fetchLoadMatches?: Map<string, FetchLoadMatch>\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingError\n    ? Object.values(pendingError)[0]\n    : pendingActionData\n    ? Object.values(pendingActionData)[0]\n    : null;\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n  let navigationMatches = boundaryMatches.filter(\n    (match, index) =>\n      match.route.loader != null &&\n      (isNewLoader(state.loaderData, state.matches[index], match) ||\n        // If this route had a pending deferred cancelled it must be revalidated\n        cancelledDeferredRoutes.some((id) => id === match.route.id) ||\n        shouldRevalidateLoader(\n          state.location,\n          state.matches[index],\n          submission,\n          location,\n          match,\n          isRevalidationRequired,\n          actionResult\n        ))\n  );\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches &&\n    fetchLoadMatches.forEach(([href, match], key) => {\n      // This fetcher was cancelled from a prior action submission - force reload\n      if (cancelledFetcherLoads.includes(key)) {\n        revalidatingFetchers.push([key, href, match]);\n      } else if (isRevalidationRequired) {\n        let shouldRevalidate = shouldRevalidateLoader(\n          href,\n          match,\n          submission,\n          href,\n          match,\n          isRevalidationRequired,\n          actionResult\n        );\n        if (shouldRevalidate) {\n          revalidatingFetchers.push([key, href, match]);\n        }\n      }\n    });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  currentLocation: string | Location,\n  currentMatch: AgnosticDataRouteMatch,\n  submission: Submission | undefined,\n  location: string | Location,\n  match: AgnosticDataRouteMatch,\n  isRevalidationRequired: boolean,\n  actionResult: DataResult | undefined\n) {\n  let currentUrl = createURL(currentLocation);\n  let currentParams = currentMatch.params;\n  let nextUrl = createURL(location);\n  let nextParams = match.params;\n\n  // This is the default implementation as to when we revalidate.  If the route\n  // provides it's own implementation, then we give them full control but\n  // provide this value so they can leverage it if needed after they check\n  // their own specific use cases\n  // Note that fetchers always provide the same current/next locations so the\n  // URL-based checks here don't apply to fetcher shouldRevalidate calls\n  let defaultShouldRevalidate =\n    isNewRouteInstance(currentMatch, match) ||\n    // Clicked the same link, resubmitted a GET form\n    currentUrl.toString() === nextUrl.toString() ||\n    // Search params affect all loaders\n    currentUrl.search !== nextUrl.search ||\n    // Forced revalidation due to submission, useRevalidate, or X-Remix-Revalidate\n    isRevalidationRequired;\n\n  if (match.route.shouldRevalidate) {\n    let routeChoice = match.route.shouldRevalidate({\n      currentUrl,\n      currentParams,\n      nextUrl,\n      nextParams,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate,\n    });\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return defaultShouldRevalidate;\n}\n\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  skipRedirects: boolean = false,\n  isRouteRequest: boolean = false\n): Promise<DataResult> {\n  let resultType;\n  let result;\n\n  // Setup a promise we can race against so that abort signals short circuit\n  let reject: () => void;\n  let abortPromise = new Promise((_, r) => (reject = r));\n  let onReject = () => reject();\n  request.signal.addEventListener(\"abort\", onReject);\n\n  try {\n    let handler = match.route[type];\n    invariant<Function>(\n      handler,\n      `Could not find the ${type} to run on the \"${match.route.id}\" route`\n    );\n\n    result = await Promise.race([\n      handler({ request, params: match.params }),\n      abortPromise,\n    ]);\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    request.signal.removeEventListener(\"abort\", onReject);\n  }\n\n  if (result instanceof Response) {\n    // Process redirects\n    let status = result.status;\n    let location = result.headers.get(\"Location\");\n\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping\n    if (isRouteRequest) {\n      throw result;\n    }\n\n    if (status >= 300 && status <= 399 && location != null) {\n      // Don't process redirects in the router during SSR document requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect\n      if (skipRedirects) {\n        throw result;\n      }\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n      };\n    }\n\n    let data: any;\n    let contentType = result.headers.get(\"Content-Type\");\n    if (contentType && contentType.startsWith(\"application/json\")) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return { type: resultType, error: result };\n  }\n\n  if (result instanceof DeferredData) {\n    return { type: ResultType.deferred, deferredData: result };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\nfunction createRequest(\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = createURL(location).toString();\n  let init: RequestInit = { signal };\n\n  if (submission) {\n    let { formMethod, formEncType, formData } = submission;\n    init.method = formMethod.toUpperCase();\n    init.body =\n      formEncType === \"application/x-www-form-urlencoded\"\n        ? convertFormDataToSearchParams(formData)\n        : formData;\n  }\n\n  // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    invariant(\n      typeof value === \"string\",\n      'File inputs are not supported with encType \"application/x-www-form-urlencoded\", ' +\n        'please use \"multipart/form-data\" instead.'\n    );\n    searchParams.append(key, value);\n  }\n\n  return searchParams;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  activeDeferreds?: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n      errors = Object.assign(errors || {}, {\n        [boundaryMatch.route.id]: error,\n      });\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else if (isDeferredResult(result)) {\n      activeDeferreds && activeDeferreds.set(id, result.deferredData);\n      loaderData[id] = result.deferredData.data;\n      // TODO: Add statusCode/headers once we wire up streaming in Remix\n    } else {\n      loaderData[id] = result.data;\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (\n        result.statusCode != null &&\n        result.statusCode !== 200 &&\n        !foundError\n      ) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here\n  if (pendingError) {\n    errors = pendingError;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingError,\n    activeDeferreds\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let [key, , match] = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      throw new Error(\"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      throw new Error(\"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: result.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[]\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  matches.forEach((match) => {\n    let id = match.route.id;\n    if (newLoaderData[id] === undefined && loaderData[id] !== undefined) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n  });\n  return mergedLoaderData;\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getNotFoundMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n  error: ErrorResponse;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find(\n    (r) => r.index || r.path === \"\" || r.path === \"/\"\n  ) || {\n    id: \"__shim-404-route__\",\n  };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n    error: new ErrorResponse(404, \"Not Found\", null),\n  };\n}\n\nfunction getMethodNotAllowedResult(path: Location | string): ErrorResult {\n  let href = typeof path === \"string\" ? path : createHref(path);\n  console.warn(\n    \"You're trying to submit to a route that does not have an action.  To \" +\n      \"fix this, please add an `action` function to the route for \" +\n      `[${href}]`\n  );\n  return {\n    type: ResultType.error,\n    error: new ErrorResponse(\n      405,\n      \"Method Not Allowed\",\n      `No action found for [${href}]`\n    ),\n  };\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results: DataResult[]): RedirectResult | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n}\n\n// Create an href to represent a \"server\" URL without the hash\nfunction createHref(location: Partial<Path> | Location | URL) {\n  return (location.pathname || \"\") + (location.search || \"\");\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  return (\n    a.pathname === b.pathname && a.search === b.search && a.hash !== b.hash\n  );\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  signal: AbortSignal,\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\n// Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\nfunction createUseMatchesMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UseMatchesMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id] as unknown,\n    handle: route.handle as unknown,\n  };\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    !hasNakedIndexQuery(search || \"\")\n  ) {\n    return matches.slice(-2)[0];\n  }\n  return matches.slice(-1)[0];\n}\n\nfunction createURL(location: Location | string): URL {\n  let base =\n    typeof window !== \"undefined\" && typeof window.location !== \"undefined\"\n      ? window.location.origin\n      : \"unknown://unknown\";\n  let href = typeof location === \"string\" ? location : createHref(location);\n  return new URL(href, base);\n}\n//#endregion\n"]},"metadata":{},"sourceType":"module"}